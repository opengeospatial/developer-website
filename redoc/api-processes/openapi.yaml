openapi: 3.0.2
info:
  version: 1.0-draft.6-SNAPSHOT
  title: "Building Blocks specified in OGC API - Processes - Part 1: Core"
  termsOfService: 'http://www.opengeospatial.org/legal/'
  contact:
    name: "Open Geospatial Consortium (OGC)"
    email: standards-team@ogc.org
    url: 'https://www.ogc.org/contacts'
  license:
    name: OGC software license 1.0
    url: 'http://www.ogc.org/ogc/software/1.0'
  x-logo:
    url: 'https://www.ogc.org/pub/www/files/OGC_Logo_2D_Blue_x_0_0.png'
  description: >
    # Draft Standard

    <div id="content">
    <div id="preamble">
    <div class="sectionbody">
    <div class="paragraph">
    <p><strong class="big">i.     Abstract</strong></p>
    </div>
    <div class="paragraph">
    <p>This standard defines the OGC API - Processes API standard. This standard builds on the OGC Web Processing Service (WPS) 2.0 Standard and defines the processing interface to communicate over a RESTful protocol using JSON encodings.</p>
    </div>
    <div class="paragraph">
    <p>By way of background and context, in many cases geospatial or location data, including data from sensors, must be processed before the information can be effectively used. The OGC Web Processing Service (WPS) Interface Standard provides a standard interface that simplifies the task of making simple or complex computational geospatial processing services accessible via web services. Such services include well-known processes found in GIS software as well as specialized processes for spatiotemporal modeling and simulation. While the OGC WPS standard was designed with spatial processing in mind, the standard could also be used to readily insert non-spatial processing tasks into a web services environment.
    The WPS standard provides a robust, interoperable, and versatile protocol for process execution on web services. WPS supports both immediate processing for computational tasks that take little time and asynchronous processing for more complex and time-consuming tasks. Moreover, the WPS standard defines a general process model that is designed to provide an interoperable description of processing functions. WPS is intended to support process cataloguing and discovery in a distributed environment.</p>
    </div>
    <div class="paragraph">
    <p>This API is a newer and more modern way of programming and interacting with resources over the web while allowing better integration into existing software packages.</p>
    </div>
    <div class="paragraph">
    <p>The resources that are provided by a server implementing the OGC API - Processes are listed in <a href="#table_core_resources">Table 1</a> below and include information about the server, the list of available processes (Process list and Process description), jobs (running processes) and
    results of process executions.</p>
    </div>
    <table id="table_core_resources" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 1. Requirements class 'Core' - Overview of resources, applicable HTTP methods and links to the document sections</caption>
    <colgroup>
    <col style="width: 27%;">
    <col style="width: 25%;">
    <col style="width: 10%;">
    <col style="width: 10%;">
    <col style="width: 28%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Resource</th>
    <th class="tableblock halign-left valign-top">Path</th>
    <th class="tableblock halign-left valign-top">HTTP method</th>
    <th class="tableblock halign-left valign-top">Parameter</th>
    <th class="tableblock halign-left valign-top">Document reference</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Landing page</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">N/A</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_landing_page">7.2 API landing page</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Conformance classes</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/conformance</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">N/A</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_conformance_classes">7.4 Declaration of conformance classes</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Process list</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/processes</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">N/A</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_process_list">7.7 Retrieve a process list</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Process description</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/processes/{processID}</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">processID (in path)</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_process_description">7.8 Retrieve a process description</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job status info</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs/{jobID}</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">jobID (in path)</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_retrieve_status_info">7.10 Retrieve status information about a job</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job results</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs/{jobID}/results</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">jobID (in path)</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_retrieve_job_results">7.11 Retrieve job results</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job status info or results</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">POST</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Execute request (contained in body)</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_create_job">7.9 Create a new job</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>In general, the HTTP GET operation is used to provide access to the resources described above.
    However, in order to create the new job, the HTTP POST method is used to create a new job by sending an execute request to the server.</p>
    </div>
    <div class="paragraph">
    <p>Additionally, the /jobs endpoint can be used to grant access to a list of jobs.</p>
    </div>
    <table id="table_job_list" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 2. Requirements class 'Job list' - Overview of resources, applicable HTTP methods and links to the document sections</caption>
    <colgroup>
    <col style="width: 27%;">
    <col style="width: 25%;">
    <col style="width: 10%;">
    <col style="width: 10%;">
    <col style="width: 28%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Resource</th>
    <th class="tableblock halign-left valign-top">Path</th>
    <th class="tableblock halign-left valign-top">HTTP method</th>
    <th class="tableblock halign-left valign-top">Parameter</th>
    <th class="tableblock halign-left valign-top">Document reference</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job list</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">processID (in path)</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#Job_list">11 Requirements Class "Job list"</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>In addition to the operations accessible through HTTP GET and POST methods, the DELETE method can be used to cancel a job execution and/or remove traces of the job execution.</p>
    </div>
    <table id="table_job_dismiss" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 3. Requirements class 'Dismiss' - Overview of resources, applicable HTTP methods and links to the document sections</caption>
    <colgroup>
    <col style="width: 27%;">
    <col style="width: 25%;">
    <col style="width: 10%;">
    <col style="width: 10%;">
    <col style="width: 28%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Resource</th>
    <th class="tableblock halign-left valign-top">Path</th>
    <th class="tableblock halign-left valign-top">HTTP method</th>
    <th class="tableblock halign-left valign-top">Parameter</th>
    <th class="tableblock halign-left valign-top">Document reference</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job status info</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs/{jobID}</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">DELETE</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">jobID (in path)</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#Dismiss">13 Requirements Class "Dismiss"</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    <div class="sect1">
    <h2 id="overview"><a class="anchor" href="#overview"></a>1. Overview</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>The OGC API - Processes builds on the WPS 2.0 standard and is modularized. This means that there is a separation between</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Core requirements, that specify basic capabilities and can easily be mapped to existing OGC Web Processing Services;</p>
    </li>
    <li>
    <p>More advanced functionality, that is not specified in WPS 2.0.</p>
    </li>
    </ul>
    </div>
    <div class="sect2">
    <h3 id="_encodings"><a class="anchor" href="#_encodings"></a>1.1. Encodings</h3>
    <div class="paragraph">
    <p>JSON is the encoding for requests and responses. The inputs and outputs of a process can be any format. The formats are defined at the time of job creation and are fixed for the specific job.</p>
    </div>
    <div class="paragraph">
    <p><a href="#rec_html">Support for HTML is recommended</a> as HTML is the core language of the World Wide Web.
    A server that supports HTML will support browsing with a web browser
    and will enable search engines to crawl and index the processes.</p>
    </div>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="_requirements_class_core"><a class="anchor" href="#_requirements_class_core"></a>2. Requirements Class "Core"</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>The following section describes the core requirements class.</p>
    </div>
    <div class="sect2">
    <h3 id="_overview"><a class="anchor" href="#_overview"></a>2.1. Overview</h3>
    <table id="rc_core" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/core" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common-1/1.0/req/core">API - Common Core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rfc2616">RFC 2616 (HTTP/1.1)</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rfc2818">RFC 2818 (HTTP over TLS)</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rfc5988">RFC 8288 (Web Linking)</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>A server that implements the OGC API - Processes provides access to processes.</p>
    </div>
    <div class="paragraph">
    <p>Each OGC API - Processes has a single <code>LandingPage</code> (path <code>/</code>) that provides links to</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>The <code>APIDefinition</code> (no fixed path),</p>
    </li>
    <li>
    <p>The <code>Conformance</code> statements (path <code>/conformance</code>),</p>
    </li>
    <li>
    <p>The <code>processes</code> metadata (path <code>/processes</code>).doss</p>
    </li>
    <li>
    <p>the <code>execute</code> endpoint (path <code>/jobs</code>).</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>The <code>APIDefinition</code> describes the capabilities of the server that can be used by
    clients to connect to the server or by development tools to support the
    implementation of servers and clients. Accessing the <code>APIDefinition</code> using
    HTTP GET returns a description of the API.</p>
    </div>
    <div class="paragraph">
    <p>Accessing <code>Conformance</code> using HTTP GET returns a list of URIs of
    requirements classes implemented by the server.</p>
    </div>
    <div class="paragraph">
    <p>The list of processes contains a summary of each process the OGC API - Processes offers, including the link to a more detailed description of the process.</p>
    </div>
    <div class="paragraph">
    <p>The process description contains information about inputs and outputs and a link to the execution-endpoint for the process.</p>
    </div>
    <div class="paragraph">
    <p>A HTTP POST request to the execution-endpoint creates a new job. The inputs and outputs need to be passed in a JSON execute-request.</p>
    </div>
    <div class="paragraph">
    <p>The URL for accessing status information is delivered in the HTTP header <code>location</code>.</p>
    </div>
    <div class="paragraph">
    <p>After a process is finished (status = success/failed), the results/exceptions can be retrieved.</p>
    </div>
    <div id="img_core" class="imageblock text-center">
    <div class="content">
    <img src="figures/PT1_FIG01.png" alt="PT1 FIG01">
    </div>
    <div class="title">Figure 1. Resources in the Core requirements class</div>
    </div>
    <div class="paragraph">
    <p>The OGC API - Processes standard utilizes elements of &lt;draft&gt; the OGC API-Common standard. <a href="#mapping-to-common">Table 4</a> Identifies the API-Common Requirements Classes which are applicable to each section of this standard.</p>
    </div>
    <table id="mapping-to-common" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 4. Mapping API - Processes Sections to API-Common Requirements Classes</caption>
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>API - Processes Section</strong></p></td>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>API-Common Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_landing_page">API Landing Page</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common-1/1.0/req/core" class="bare">http://www.opengis.net/spec/ogcapi_common-1/1.0/req/core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_api_definition">API Definition</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common-1/1.0/req/core" class="bare">http://www.opengis.net/spec/ogcapi_common-1/1.0/req/core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_conformance_classes">Declaration of Conformance Classes</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common-1/1.0/req/core" class="bare">http://www.opengis.net/spec/ogcapi_common-1/1.0/req/core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#requirements-class-openapi_3_0-clause">OpenAPI 3.0</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common-1/1.0/req/oas30" class="bare">http://www.opengis.net/spec/ogcapi_common-1/1.0/req/oas30</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#sc_requirements_class_html">HTML</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common-1/1.0/req/html" class="bare">http://www.opengis.net/spec/ogcapi_common-1/1.0/req/html</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="sc_landing_page"><a class="anchor" href="#sc_landing_page"></a>2.2. Retrieve the API landing page</h3>
    <div class="paragraph">
    <p>The following section defines the requirements to retrieve an API landing page.</p>
    </div>
    <div class="sect3">
    <h4 id="_operation"><a class="anchor" href="#_operation"></a>2.2.1. Operation</h4>
    <table id="req_core_landingpage-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 1</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/landingpage-op<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_response"><a class="anchor" href="#_response"></a>2.2.2. Response</h4>
    <table id="req_core_landingpage-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 2</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/landingpage-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a response with a
    HTTP status code <code>200</code>.</p>
    </div>
    <div class="paragraph">
    <p>The content of that response SHALL be based upon the OpenAPI 3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/landingPage.yaml">landingPage.yaml</a>
    and include at least links to the following resources:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>the API definition (relation type 'service-desc' or 'service-doc')</p>
    </li>
    <li>
    <p><code>/conformance</code> (relation type 'conformance')</p>
    </li>
    <li>
    <p><code>/processes</code> (relation type 'processes')</p>
    </li>
    <li>
    <p><code>/jobs</code> (relation type 'execute')</p>
    </li>
    </ul>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/landingPage.yaml">The following is the schema for the landing page</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>type: object
    required:
      - links
    properties:
      title:
        type: string
        example: Example processing server
      description:
        type: string
        example: Example server implementing the OGC API - Processes 1.0
      links:
        type: array
        items:
          $ref: link.yaml</code></pre>
    </div>
    </div>
    <div class="exampleblock">
    <div class="title">Example 1. Landing page response document</div>
    <div class="content">
    <div class="listingblock">
    <div class="content">
    <pre class="pygments highlight"><code data-lang="JSON"><span></span>{
    	&quot;links&quot;: [{
    		&quot;href&quot;: &quot;http://processing.example.org/oapi-p?f=application/json&quot;,
    		&quot;rel&quot;: &quot;self&quot;,
    		&quot;type&quot;: &quot;application/json&quot;,
    		&quot;title&quot;: &quot;This document&quot;
    	},{
    		&quot;href&quot;: &quot;http://processing.example.org/oapi-p?f=text/html&quot;,
    		&quot;rel&quot;: &quot;alternate&quot;,
    		&quot;type&quot;: &quot;text/html&quot;,
    		&quot;title&quot;: &quot;This document as HTML&quot;
    	},
    	{
    		&quot;href&quot;: &quot;http://processing.example.org/oapi-p/api?f=application/json&quot;,
    		&quot;rel&quot;: &quot;service-desc&quot;,
    		&quot;type&quot;: &quot;application/json&quot;,
    		&quot;title&quot;: &quot;API definition for this endpoint as JSON&quot;
    	},
    	{
    		&quot;href&quot;: &quot;http://processing.example.org/oapi-p/api?f=text/html&quot;,
    		&quot;rel&quot;: &quot;service-desc&quot;,
    		&quot;type&quot;: &quot;text/html&quot;,
    		&quot;title&quot;: &quot;API definition for this endpoint as HTML&quot;
    	},
    	{
    		&quot;href&quot;: &quot;http://processing.example.org/oapi-p/conformance&quot;,
    		&quot;rel&quot;: &quot;conformance&quot;,
    		&quot;type&quot;: &quot;application/json&quot;,
    		&quot;title&quot;: &quot;OGC API - Processes conformance classes implemented by this server&quot;
    	},
    	{
    		&quot;href&quot;: &quot;http://processing.example.org/oapi-p/processes&quot;,
    		&quot;rel&quot;: &quot;processes&quot;,
    		&quot;type&quot;: &quot;application/json&quot;,
    		&quot;title&quot;: &quot;Metadata about the processes&quot;
    	},
    	{
    		&quot;href&quot;: &quot;http://processing.example.org/oapi-p/jobs&quot;,
    		&quot;rel&quot;: &quot;execute&quot;,
    		&quot;title&quot;: &quot;The Execute endpoint&quot;
    	}]
    }</code></pre>
    </div>
    </div>
    </div>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_error_situations"><a class="anchor" href="#_error_situations"></a>2.2.3. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sc_api_definition"><a class="anchor" href="#sc_api_definition"></a>2.3. Retrieve an API definition</h3>
    <div class="paragraph">
    <p>The following section defines the requirements to retrieve an API definition.</p>
    </div>
    <div class="sect3">
    <h4 id="_operation_2"><a class="anchor" href="#_operation_2"></a>2.3.1. Operation</h4>
    <div class="paragraph">
    <p>Every OGC API - Processes provides an API definition that describes the capabilities
    of the server. This definition is used by developers to understand the API,
    by software clients to connect to the server, or
    by development tools to support the implementation of servers and clients.</p>
    </div>
    <table id="req_core_api-definition-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 3</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/api-definition-op<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/api</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_response_2"><a class="anchor" href="#_response_2"></a>2.3.2. Response</h4>
    <table id="req_core_api-definition-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 4</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/api-definition-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation to get the API definition document SHALL be reported as a
    response with a HTTP status code <code>200</code>.</p>
    </div>
    <div class="paragraph">
    <p>The server SHALL return an API definition document.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="rec_core_api_definition-oas" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Recommendation 1</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/rec/core/api-definition-oas<br></p>
    </div>
    <div class="paragraph">
    <p>If the API definition document uses the OpenAPI Specification 3.0,
    the document SHOULD conform to the
    <a href="#rc_oas30">OpenAPI Specification 3.0 requirements class</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>If multiple API definition formats are supported by a server, use
    content negotiation to select the desired representation.</p>
    </div>
    <div class="admonitionblock note">
    <table>
    <tr>
    <td class="icon">
    <div class="title">Note</div>
    </td>
    <td class="content">
    <div class="paragraph">
    <p>Two common approaches are:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>an additional path for each encoding of each resource (this can be expressed,
    for example, using format specific suffixes like ".html");</p>
    </li>
    <li>
    <p>an additional query parameter (for example, "accept" or "f") that overrides
    the Accept header of the HTTP request.</p>
    </li>
    </ul>
    </div>
    </td>
    </tr>
    </table>
    </div>
    <div class="paragraph">
    <p>The API definition document describes the API. In other words,
    there is no need to include the <code>/api</code> operation in the API definition itself.</p>
    </div>
    <div class="paragraph">
    <p>The idea is that any OGC API - Processes can be used by developers that are familiar with
    the API definition language(s) supported by the server. For example, if
    an OpenAPI definition is used, it should be possible to create a working
    client using the OpenAPI definition. The developer may need to learn a little
    bit about geospatial data types, etc., but it should not be required to read
    this standard to access the processes and results via the API.</p>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_error_situations_2"><a class="anchor" href="#_error_situations_2"></a>2.3.3. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sc_conformance_classes"><a class="anchor" href="#sc_conformance_classes"></a>2.4. Declaration of conformance classes</h3>
    <div class="sect3">
    <h4 id="_operation_3"><a class="anchor" href="#_operation_3"></a>2.4.1. Operation</h4>
    <div class="paragraph">
    <p>To support "generic" clients for accessing servers implementing OGC API - Processes in general - and
    not "just" a specific API / server, the server has to declare the
    requirements classes it implements and conforms to.</p>
    </div>
    <table id="req_core_conformance-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 5</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/conformance-op<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/conformance</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_response_3"><a class="anchor" href="#_response_3"></a>2.4.2. Response</h4>
    <table id="req_core_conformance-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 6</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/conformance-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a response with a
    HTTP status code <code>200</code>.</p>
    </div>
    <div class="paragraph">
    <p>The content of that response SHALL be based upon the OpenAPI 3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/req-classes.yaml">req-classes.yaml</a> and
    list all OGC API - Processes requirements classes that the server conforms to.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/bpross-52n/wps-rest-oas/master/schemas/req-classes.yaml">The following is the schema for the list of requirements classes</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>type: object
    required:
      - conformsTo
    properties:
      conformsTo:
        type: array
        items:
          type: string
          example: &quot;http://www.opengis.net/spec/ogcapi_processes/1.0/req/core&quot;</code></pre>
    </div>
    </div>
    <div class="exampleblock">
    <div class="title">Example 2. Requirements class response document</div>
    <div class="content">
    <div class="paragraph">
    <p>This example response in JSON is for a server that supports OpenAPI 3.0 for
    the API definition and HTML and JSON as encodings.</p>
    </div>
    <div class="listingblock">
    <div class="content">
    <pre class="pygments highlight"><code data-lang="JSON"><span></span>{
    	&quot;conformsTo&quot;: [
    		&quot;http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core&quot;,
    		&quot;http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/json&quot;,
    		&quot;http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/html&quot;,
    		&quot;http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/oas30&quot;
    	]
    }</code></pre>
    </div>
    </div>
    </div>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_error_situations_3"><a class="anchor" href="#_error_situations_3"></a>2.4.3. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_use_of_http_1_1"><a class="anchor" href="#_use_of_http_1_1"></a>2.5. Use of HTTP 1.1</h3>
    <table id="req_core_http" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 7</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/http<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL conform to <a href="#rfc2616">HTTP 1.1</a>.</p>
    </div>
    <div class="paragraph">
    <p>If the server supports HTTPS, the server SHALL also conform to
    <a href="#rfc2818">HTTP over TLS</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="sect3">
    <h4 id="http_status_codes"><a class="anchor" href="#http_status_codes"></a>2.5.1. HTTP status codes</h4>
    <div class="paragraph">
    <p><a href="#status_codes">Table 5</a> lists the main HTTP status codes that clients should be
    prepared to receive.</p>
    </div>
    <div class="paragraph">
    <p>This includes, for example, support for specific security schemes or URI
    redirection.</p>
    </div>
    <div class="paragraph">
    <p>In addition, other error situations may occur in the transport layer
    outside of the server.</p>
    </div>
    <table id="status_codes" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 5. Typical HTTP status codes</caption>
    <colgroup>
    <col style="width: 15%;">
    <col style="width: 85%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Status code</th>
    <th class="tableblock halign-left valign-top">Description</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>200</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">A successful request.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>201</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The request was successful and one or more new resources have being created.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>400</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The server cannot or will not process the request due to an apparent client error. For example, a query parameter had an incorrect value.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>401</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The request requires user authentication. The response includes a <code>WWW-Authenticate</code> header field containing a challenge applicable to the requested resource.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>403</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The server understood the request, but is refusing to fulfill it. While status code <code>401</code> indicates missing or bad authentication, status code <code>403</code> indicates that authentication is not the issue, but the client is not authorized to perform the requested operation on the resource.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>404</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The requested resource does not exist on the server. For example, a path parameter had an incorrect value.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>405</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The request method is not supported. For example, a POST request was submitted, but the resource only supports GET requests.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>406</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The <code>Accept</code> header submitted in the request did not support any of the media types supported by the server for the requested resource.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>410</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The target resource is no longer available at the origin server.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>429</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The user has sent too many requests in a given amount of time ("rate limiting").</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>500</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">An internal error occurred in the server.</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>501</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">The server does not support the functionality required to fulfill the request.</p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>More specific guidance is provided for each resource, where applicable.</p>
    </div>
    <table id="per_core_additiona-status-codes" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Permission 1</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/per/core/additional-status-codes<br></p>
    </div>
    <div class="paragraph">
    <p>Servers MAY support other capabilities of the HTTP protocol and, therefore,
    MAY return other status codes than those listed in <a href="#status_codes">Table 5</a>, too.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_support_for_cross_origin_requests"><a class="anchor" href="#_support_for_cross_origin_requests"></a>2.6. Support for cross-origin requests</h3>
    <div class="paragraph">
    <p>Access to content from a HTML page is by default prohibited for security reasons if the content is located on another host than the webpage ("same-origin policy"). Cross-origin resource sharing is a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served. A typical example is a web-application accessing processes and data from multiple servers.</p>
    </div>
    <table id="rec_core_cross-origin" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Recommendation 2</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/rec/core/cross-origin<br></p>
    </div>
    <div class="paragraph">
    <p>If the server is intended to be accessed from the browser, cross-origin
    requests SHOULD be supported. Note that support can also be added in a
    proxy layer on top of the server.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>Two common mechanisms to support cross-origin requests are:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p><a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">Cross-origin resource sharing (CORS)</a></p>
    </li>
    <li>
    <p><a href="https://en.wikipedia.org/wiki/JSONP">JSONP (JSON with padding)</a></p>
    </li>
    </ul>
    </div>
    <table id="rec_core_access-control-expose-headers" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Recommendation 3</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/rec/core/access-control-expose-headers<br></p>
    </div>
    <div class="paragraph">
    <p>If the server is intended to be accessed from the browser and if Cross-origin resource sharing is supported, the <code>Access-Control-Expose-Headers</code> header SHOULD be used and the header SHOULD contain the value <code>location</code> to enable the browser to access the <code>location</code> header of the response.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="rec_core_html" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Recommendation 4</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/rec/core/html<br></p>
    </div>
    <div class="paragraph">
    <p>To support browsing an OGC API - Processes with a web browser and to enable search engines to crawl
    and index a process, implementations SHOULD consider to support an HTML encoding.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="sc_process_list"><a class="anchor" href="#sc_process_list"></a>2.7. Retrieve a process list</h3>
    <div class="paragraph">
    <p>The following section defines the requirements to retrieve the available processes offered by the server.</p>
    </div>
    <div class="sect3">
    <h4 id="_operation_4"><a class="anchor" href="#_operation_4"></a>2.7.1. Operation</h4>
    <table id="req_core_process-list" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 8</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/process-list<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/processes</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_response_4"><a class="anchor" href="#_response_4"></a>2.7.2. Response</h4>
    <table id="req_job-list_job-list-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 9</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/process-list-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the <em>process</em> operation SHALL be reported as a
    response with a HTTP status code 200.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/processList.yaml">processList.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/processList.yaml">The following is the schema for the process list</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>type: array
    items:
      $ref: &quot;processSummary.yaml&quot;</code></pre>
    </div>
    </div>
    <div id="schema-processSummary" class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/processSummary.yaml">The following is the schema for the process summary</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>allOf:
      - $ref: &quot;descriptionType.yaml&quot;
      - type: object
        required:
          - version
        properties:
          version:
            type: string
          jobControlOptions:
            type: array
            items:
              $ref: &quot;jobControlOptions.yaml&quot;
          outputTransmission:
            type: array
            items:
              $ref: &quot;transmissionMode.yaml&quot;
          links:
            type: array
            items:
              $ref: &quot;link.yaml&quot;</code></pre>
    </div>
    </div>
    <div class="listingblock">
    <div class="title">Example of HTTP GET request for retrieving the list of offered processes encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code><span></span>GET /processes HTTP/1.1
    Host: processing.example.org</code></pre>
    </div>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of Process list encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="json"><span></span><span class="tok-p">[</span>
        <span class="tok-p">{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EchoProcess&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EchoProcess&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;version&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;1.0.0&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;jobControlOptions&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span><span class="tok-s2">&quot;async-execute&quot;</span><span class="tok-p">,</span> <span class="tok-s2">&quot;sync-execute&quot;</span><span class="tok-p">],</span>
    		<span class="tok-nt">&quot;outputTransmission&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span><span class="tok-s2">&quot;value&quot;</span><span class="tok-p">,</span>	<span class="tok-s2">&quot;reference&quot;</span><span class="tok-p">],</span>
            <span class="tok-nt">&quot;links&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
              <span class="tok-p">{</span>
                <span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;https://processing.example.org/oapi-p/processes/EchoProcess&quot;</span><span class="tok-p">,</span>
                <span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
                <span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;process-desc&quot;</span><span class="tok-p">,</span>
                <span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;process description&quot;</span>
              <span class="tok-p">}</span>
            <span class="tok-p">]</span>
    	<span class="tok-p">}</span>
    <span class="tok-p">]</span></code></pre>
    </div>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_error_situations_4"><a class="anchor" href="#_error_situations_4"></a>2.7.3. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sc_process_description"><a class="anchor" href="#sc_process_description"></a>2.8. Retrieve a process description</h3>
    <div class="paragraph">
    <p>The following section defines the requirements to retrieve metadata about a process.</p>
    </div>
    <div class="sect3">
    <h4 id="_operation_5"><a class="anchor" href="#_operation_5"></a>2.8.1. Operation</h4>
    <table id="req_core_process" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 10</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/process<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/processes/{processID}</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_response_5"><a class="anchor" href="#_response_5"></a>2.8.2. Response</h4>
    <table id="req_core_process-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 11</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/process-success<br></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">A</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a response with a HTTP status code 200.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">B</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>The content of the response SHALL be a process description.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The <a href="#rc_core">Core</a> does not mandate the use of a specific process description
    to specify the interface of a process.  That said, the <a href="#rc_core">Core</a>
    requirements class makes the following recommendation:</p>
    </div>
    <table id="rec_core_ogc-process-description" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Recommendation 5</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/rec/core/ogc-process-description<br></p>
    </div>
    <div class="paragraph">
    <p>Implementations SHOULD consider supporting the <a href="#ogc_process_description">OGC process description</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_error_situations_5"><a class="anchor" href="#_error_situations_5"></a>2.8.3. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    <table id="req_core_no-such-process" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 12</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/process-exception/no-such-process<br></p>
    </div>
    <div class="paragraph">
    <p>If the operation is executed using an invalid process identifier, the response SHALL be HTTP status code 404.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/exception.yaml">exception.yaml</a>.
    The exception code of the exception SHALL be "NoSuchProcess".</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sc_create_job"><a class="anchor" href="#sc_create_job"></a>2.9. Create a new job</h3>
    <div class="paragraph">
    <p>The following section describes the requirements to create a new job, i.e. execute a process.</p>
    </div>
    <div class="sect3">
    <h4 id="_operation_6"><a class="anchor" href="#_operation_6"></a>2.9.1. Operation</h4>
    <table id="req_core_job-creation-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 13</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-creation-op<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP POST operation at the path <code>/jobs</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_request_body"><a class="anchor" href="#_request_body"></a>2.9.2. Request body</h4>
    <table id="req_core_job-creation-request" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 14</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-creation-request<br></p>
    </div>
    <div class="paragraph">
    <p>The content of a request to create a new job SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/execute.yaml">execute.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/execute.yaml">The following is the schema for execute</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>type: object
    required:
      - id
      - outputs
      - mode
      - response
    properties:
      id:
        type: string
      inputs:
          $ref: &quot;input.yaml&quot;
      outputs:
          $ref: &quot;output.yaml&quot;
      mode:
        type: string
        enum:
          - sync
          - async
          - auto
      response:
        type: string
        enum:
          - raw
          - document
      subscriber:
        $ref: &quot;subscriber.yaml&quot;</code></pre>
    </div>
    </div>
    <div class="paragraph">
    <p>A process can be either synchronous or asynchronous.</p>
    </div>
    <table id="req_core_job-creation-mode" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 15</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-creation-mode<br></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">A</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>To create a job asynchronously, the "mode" attribute of the execute request body SHALL be set to "async".</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">B</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>To create a job synchronously, the "mode" attribute of the execute request body SHALL be set to "sync".</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">C</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>To let the server decide the execution mode, the "mode" attribute of the execute request body SHALL be set to "auto".</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title">The following is an example of an execute request</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="json"><span></span><span class="tok-p">{</span>
    	<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EchoProcess&quot;</span><span class="tok-p">,</span>
    	<span class="tok-nt">&quot;inputs&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    		<span class="tok-nt">&quot;complexInputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/xml&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-nt">&quot;value&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;&lt;test/&gt;&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;complexInputsId&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
    			<span class="tok-p">{</span>
    				<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    					<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;text/plain&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;encoding&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;UTF-8&quot;</span>
    				<span class="tok-p">},</span>
    				<span class="tok-nt">&quot;value&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;test&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-p">{</span>
    				<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    					<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;text/plain&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;encoding&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;UTF-8&quot;</span>
    				<span class="tok-p">},</span>
    				<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;https://test.data/test.txt&quot;</span>
    			<span class="tok-p">}</span>
    		<span class="tok-p">],</span>
    		<span class="tok-nt">&quot;literalInputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;dataType&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    				<span class="tok-nt">&quot;name&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;double&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-nt">&quot;value&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;0.05&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;boundingboxInputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;bbox&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
    				<span class="tok-mf">51.9</span><span class="tok-p">,</span>
    				<span class="tok-mi">7</span><span class="tok-p">,</span>
    				<span class="tok-mi">52</span><span class="tok-p">,</span>
    				<span class="tok-mf">7.1</span>
    			<span class="tok-p">],</span>
    			<span class="tok-nt">&quot;crs&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EPSG:4326&quot;</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">},</span>
    	<span class="tok-nt">&quot;outputs&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    		<span class="tok-nt">&quot;literalOutputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;transmissionMode&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;value&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;boundingboxOutput&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;transmissionMode&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;value&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;complexOutputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/xml&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-nt">&quot;transmissionMode&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;value&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;complexOutputsId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;text/plain&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-nt">&quot;transmissionMode&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;reference&quot;</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">},</span>
    	<span class="tok-nt">&quot;response&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;document&quot;</span><span class="tok-p">,</span>
    	<span class="tok-nt">&quot;mode&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;async&quot;</span>
    <span class="tok-p">}</span></code></pre>
    </div>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_response_6"><a class="anchor" href="#_response_6"></a>2.9.3. Response</h4>
    <div class="paragraph">
    <p>In the case of asynchronous execution, the requirements below apply:</p>
    </div>
    <table id="req_core_job-creation-success-async" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 16</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-creation-success-async<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a
    response with a HTTP status code 201.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="req_core_job-creation-success-header-async" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 17</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-creation-success-header-async<br></p>
    </div>
    <div class="paragraph">
    <p>The 201 response of the operation SHALL return a HTTP header named 'Location' which contains a link to the newly created job.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>For a synchronous execution, the following requirement applies:</p>
    </div>
    <table id="req_core_job-creation-success-sync" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Requirement 18</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-creation-success-sync</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">A</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a
    response with a HTTP status code 200.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">B</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>If the "response" attribute of the execute request was set to "document", the content of the response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/results.yaml">results.yaml</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">C</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>If the "response" attribute of the execute request was set to "raw", the content of the response SHALL only include the one output selected by the execute request body.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_error_situations_6"><a class="anchor" href="#_error_situations_6"></a>2.9.4. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    <div class="paragraph">
    <p>If the process with the specified identifier does not exist on the server, the status code of the response SHALL be <code>404</code> (see <a href="#req_core_no-such-process">/req/core/process-exception/no-such-process</a>).</p>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sc_retrieve_status_info"><a class="anchor" href="#sc_retrieve_status_info"></a>2.10. Retrieve status information about a job</h3>
    <div class="paragraph">
    <p>The following section describes the requirements to retrieve information about the status of a job.</p>
    </div>
    <div class="sect3">
    <h4 id="_operation_7"><a class="anchor" href="#_operation_7"></a>2.10.1. Operation</h4>
    <table id="req_core_job" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 19</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/jobs/{jobID}</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_response_7"><a class="anchor" href="#_response_7"></a>2.10.2. Response</h4>
    <table id="req_core_job-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 20</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a
    response with a HTTP status code 200.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/statusInfo.yaml">statusInfo.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div id="schema-statusInfo" class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/statusInfo.yaml">The following is the schema for status info</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>type: object
    required:
       - jobID
       - status
    properties:
       jobID:
          type: string
       status:
          type: string
          enum:
             - accepted
             - running
             - successful
             - failed
             - dismissed
       message:
          type: string
       progress:
          type: integer
          minimum: 0
          maximum: 100
       links:
          type: array
          items:
             $ref: &quot;link.yaml&quot;</code></pre>
    </div>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of HTTP GET request for retrieving status information about a job encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code><span></span>GET /jobs/81574318-1eb1-4d7c-af61-4b3fbcf33c4f HTTP/1.1
    Host: processing.example.org</code></pre>
    </div>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of a job encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="json"><span></span><span class="tok-p">{</span>
      <span class="tok-nt">&quot;jobID&quot;</span> <span class="tok-p">:</span> <span class="tok-s2">&quot;81574318-1eb1-4d7c-af61-4b3fbcf33c4f&quot;</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;status&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;accepted&quot;</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;message&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Process started&quot;</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;progress&quot;</span><span class="tok-p">:</span> <span class="tok-mi">0</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;links&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
        <span class="tok-p">{</span>
          <span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;http://processing.example.org/oapi-p/jobs/81574318-1eb1-4d7c-af61-4b3fbcf33c4f&quot;</span><span class="tok-p">,</span>
          <span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;self&quot;</span><span class="tok-p">,</span>
          <span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
          <span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;this document&quot;</span>
        <span class="tok-p">}</span>
      <span class="tok-p">]</span>
    <span class="tok-p">}</span></code></pre>
    </div>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_error_situations_7"><a class="anchor" href="#_error_situations_7"></a>2.10.3. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    <div class="paragraph">
    <p>If the process with the specified identifier does not exist on the server, the status code of the response SHALL be <code>404</code> (see <a href="#req_core_no-such-process">/req/core/process-exception/no-such-process</a>).</p>
    </div>
    <table id="req_core_job-exception-no-such-job" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 21</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-exception-no-such-job<br></p>
    </div>
    <div class="paragraph">
    <p>If the operation is executed using an invalid job identifier, the response SHALL have HTTP status code 404.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/exception.yaml">exception.yaml</a>.
    The exception code of the exception SHALL be "NoSuchJob".</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sc_retrieve_job_results"><a class="anchor" href="#sc_retrieve_job_results"></a>2.11. Retrieve job results</h3>
    <div class="paragraph">
    <p>The following section describes the requirements to retrieve the results of a job. In case the job execution failed, an exception is returned.</p>
    </div>
    <div class="sect3">
    <h4 id="_operation_8"><a class="anchor" href="#_operation_8"></a>2.11.1. Operation</h4>
    <table id="req_core_job-result" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 22</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-result<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/jobs/{jobID}/results</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_response_8"><a class="anchor" href="#_response_8"></a>2.11.2. Response</h4>
    <table id="req_core_job-result-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 23</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-result-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a
    response with a HTTP status code 200.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/result.yaml">result.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/result.yaml">The following is the schema for the result of a job</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>additionalProperties:
        oneOf:
            - $ref: &quot;inlineOrRefData.yaml&quot;
            - $ref: &quot;boundingBoxData.yaml&quot;
            - type: array
              items:
                  oneOf:
                      - $ref: &quot;inlineOrRefData.yaml&quot;
                      - $ref: &quot;boundingBoxData.yaml&quot;</code></pre>
    </div>
    </div>
    <div class="paragraph">
    <p>The schema defines a map using the respective id of the output as key. The value of the output can be returned as inline value or as reference.</p>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of HTTP GET request for retrieving the result a job encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code><span></span>GET /jobs/81574318-1eb1-4d7c-af61-4b3fbcf33c4f/result HTTP/1.1
    Host: processing.example.org</code></pre>
    </div>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of a result encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="json"><span></span><span class="tok-p">{</span>
    	<span class="tok-nt">&quot;literalOutputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    		<span class="tok-nt">&quot;dataType&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;name&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;double&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;value&quot;</span><span class="tok-p">:</span> <span class="tok-mf">0.05</span>
    	<span class="tok-p">},</span>
    	<span class="tok-nt">&quot;boundingboxOutputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    		<span class="tok-nt">&quot;value&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;bbox&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
    				<span class="tok-mf">51.9</span><span class="tok-p">,</span>
    				<span class="tok-mi">7</span><span class="tok-p">,</span>
    				<span class="tok-mi">52</span><span class="tok-p">,</span>
    				<span class="tok-mf">7.1</span>
    			<span class="tok-p">],</span>
    			<span class="tok-nt">&quot;crs&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EPSG:4326&quot;</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">},</span>
    	<span class="tok-nt">&quot;complexOutputId&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    		<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/xml&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;value&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;&lt;test/&gt;&quot;</span>
    	<span class="tok-p">},</span>
    	<span class="tok-nt">&quot;complexOutputsId&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
    		<span class="tok-p">{</span>
    			<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;text/plain&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;https://processing.example.org/outputdata/faf7c1b6-3c47-4bab-a8a0-9ba9fce5378b.txt&quot;</span>
    		<span class="tok-p">},</span>
    		<span class="tok-p">{</span>
    			<span class="tok-nt">&quot;format&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;text/plain&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;https://processing.example.org/outputdata/ae8eeda3-d408-4852-b442-de7d0b2d8c48.txt&quot;</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">]</span>
    <span class="tok-p">}</span></code></pre>
    </div>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_error_situations_8"><a class="anchor" href="#_error_situations_8"></a>2.11.3. Error situations</h4>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    <table id="req_core_job-result-exception_no-such-job" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 24</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-result-exception/no-such-job<br></p>
    </div>
    <div class="paragraph">
    <p>If the operation is executed using an invalid job identifier, the response SHALL have HTTP status code 404.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/exception.yaml">exception.yaml</a>.
    The exception code of the exception SHALL be "NoSuchJob".</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="req_core_job-result-exception_result-not-ready" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 25</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-result-exception/result-not-ready<br></p>
    </div>
    <div class="paragraph">
    <p>If the operation is executed on a running job with a valid job identifier, the response SHALL have HTTP status code 404.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/exception.yaml">exception.yaml</a>.
    The exception code of the exception SHALL be "ResultNotReady".</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="req_core_job-result-failed" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 26</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/core/job-result-failed<br></p>
    </div>
    <div class="paragraph">
    <p>If the operation is executed on a failed job using a valid job identifier, the response SHALL have a HTTP error code that corresponds to the reason of the failure.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/exception.yaml">exception.yaml</a>.
    The exception code SHALL correspond to the reason of the failure, e.g. InvalidParameterValue for invalid input data.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="_requirements_class_ogc_process_description"><a class="anchor" href="#_requirements_class_ogc_process_description"></a>3. Requirements Class "OGC Process Description"</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>The following section describes the <code>OGC Process Description</code> requirements
    class.</p>
    </div>
    <div class="sect2">
    <h3 id="_overview_2"><a class="anchor" href="#_overview_2"></a>3.1. Overview</h3>
    <table id="rc_ogc-process-description" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/ogc-process-description" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/ogc-process-description</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">OGC API - Processes Core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#JSON">JSON</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The OGC process description is an information model that may be used to specify the interface of a process.  This model is an evolution of the process description model originally defined in the <a href="http://docs.opengeospatial.org/is/14-065/14-065.html">OGC WPS 2.0.2 Interface Standard</a> and as such provides a bridge from legacy implementations into the OGC API Framework.</p>
    </div>
    <div class="paragraph">
    <p>The process description allows the following information to be specified:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>An identifier for the process</p>
    </li>
    <li>
    <p>Descriptive metadata about the process;</p>
    <div class="ulist">
    <ul>
    <li>
    <p>A title</p>
    </li>
    <li>
    <p>A narrative description of the process</p>
    </li>
    <li>
    <p>Keywords that can be associated with the process</p>
    </li>
    <li>
    <p>References to additional metadata</p>
    </li>
    </ul>
    </div>
    </li>
    <li>
    <p>A description of each process input</p>
    </li>
    <li>
    <p>A description of each process output</p>
    </li>
    <li>
    <p>A job control specification that indicates whether the process can be invoked synchronously, asynchronously, or either.</p>
    </li>
    <li>
    <p>An output transmission specification that indicates how the results of a process are retrieved; either by value or by reference</p>
    </li>
    <li>
    <p>A section for additional parameters that are intended for communities of use to extend the process description as required</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>The following clause defines a JSON-encoding of the OGC process description.</p>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_ogc_process_description"><a class="anchor" href="#_ogc_process_description"></a>3.2. OGC process description</h3>
    <table id="req_ogc-process-description_json-encoding" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 27</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/ogc-process-description/json-encoding<br></p>
    </div>
    <div class="paragraph">
    <p>A JSON-encoded OGC process description SHALL validate against the OpenAPI 3.0 schema: <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/process.yaml">process.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/process.yaml">Schema for a process (process.yaml)</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>allOf:
       - $ref: &quot;processSummary.yaml&quot;
       - type: object
         properties:
            inputs:
               type: array
               items:
                  $ref: &quot;inputDescription.yaml&quot;
            outputs:
               type: array
               items:
                  $ref: &quot;outputDescription.yaml&quot;</code></pre>
    </div>
    </div>
    <div class="paragraph">
    <p>The schema imports the elements from the <a href="#schema-processSummary">process summary</a> and specifies two arrays for input and output descriptions.</p>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of HTTP GET request for retrieving the list of offered processes encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code><span></span>https://processing.example.org/processes/EchoProcess</code></pre>
    </div>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of a process encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="json"><span></span><span class="tok-p">{</span>
    	<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EchoProcess&quot;</span><span class="tok-p">,</span>
    	<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EchoProcess&quot;</span><span class="tok-p">,</span>
    	<span class="tok-nt">&quot;version&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;1.0.0&quot;</span><span class="tok-p">,</span>
    	<span class="tok-nt">&quot;jobControlOptions&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span><span class="tok-s2">&quot;async-execute&quot;</span><span class="tok-p">,</span> <span class="tok-s2">&quot;sync-execute&quot;</span><span class="tok-p">],</span>
    	<span class="tok-nt">&quot;outputTransmission&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span><span class="tok-s2">&quot;value&quot;</span><span class="tok-p">,</span> <span class="tok-s2">&quot;reference&quot;</span><span class="tok-p">],</span>
    	<span class="tok-nt">&quot;inputs&quot;</span><span class="tok-p">:</span> <span class="tok-p">[{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;boundingboxInput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;boundingboxInput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;input&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;supportedCRS&quot;</span><span class="tok-p">:</span> <span class="tok-p">[{</span>
    				<span class="tok-nt">&quot;default&quot;</span><span class="tok-p">:</span> <span class="tok-kc">true</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;crs&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EPSG:4326&quot;</span>
    			<span class="tok-p">}]</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;minOccurs&quot;</span><span class="tok-p">:</span> <span class="tok-mi">1</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;maxOccurs&quot;</span><span class="tok-p">:</span> <span class="tok-mi">1</span>
    	<span class="tok-p">},</span>
    	<span class="tok-p">{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;literalInput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;literalInput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;input&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;literalDataDomains&quot;</span><span class="tok-p">:</span> <span class="tok-p">[{</span>
    				<span class="tok-nt">&quot;dataType&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    					<span class="tok-nt">&quot;name&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;double&quot;</span>
    				<span class="tok-p">},</span>
    				<span class="tok-nt">&quot;valueDefinition&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    					<span class="tok-nt">&quot;anyValue&quot;</span><span class="tok-p">:</span> <span class="tok-kc">true</span>
    				<span class="tok-p">}</span>
    			<span class="tok-p">}]</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;minOccurs&quot;</span><span class="tok-p">:</span> <span class="tok-mi">1</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;maxOccurs&quot;</span><span class="tok-p">:</span> <span class="tok-mi">1</span>
    	<span class="tok-p">},</span>
    	<span class="tok-p">{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;complexInput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;complexInput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;input&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;formats&quot;</span><span class="tok-p">:</span> <span class="tok-p">[{</span>
    				<span class="tok-nt">&quot;default&quot;</span><span class="tok-p">:</span> <span class="tok-kc">true</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/xml&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/xml&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;text/xml&quot;</span>
    			<span class="tok-p">}]</span>
    		<span class="tok-p">},</span>
    		<span class="tok-nt">&quot;minOccurs&quot;</span><span class="tok-p">:</span> <span class="tok-mi">1</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;maxOccurs&quot;</span><span class="tok-p">:</span> <span class="tok-mi">1</span>
    	<span class="tok-p">}],</span>
    	<span class="tok-nt">&quot;outputs&quot;</span><span class="tok-p">:</span> <span class="tok-p">[{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;boundingboxOutput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;boundingboxOutput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;output&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;supportedCRS&quot;</span><span class="tok-p">:</span> <span class="tok-p">[{</span>
    				<span class="tok-nt">&quot;default&quot;</span><span class="tok-p">:</span> <span class="tok-kc">true</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;crs&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EPSG:4326&quot;</span>
    			<span class="tok-p">}]</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">},</span>
    	<span class="tok-p">{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;literalOutput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;literalOutput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;output&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;literalDataDomain&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
                    <span class="tok-nt">&quot;dataType&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
                      <span class="tok-nt">&quot;name&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;double&quot;</span>
                    <span class="tok-p">},</span>
    				<span class="tok-nt">&quot;valueDefinition&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    					<span class="tok-nt">&quot;anyValue&quot;</span><span class="tok-p">:</span> <span class="tok-kc">true</span>
    				<span class="tok-p">}</span>
    			<span class="tok-p">}</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">},</span>
    	<span class="tok-p">{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;complexOutput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;complexOutput&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;output&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;formats&quot;</span><span class="tok-p">:</span> <span class="tok-p">[{</span>
    				<span class="tok-nt">&quot;default&quot;</span><span class="tok-p">:</span> <span class="tok-kc">true</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/xml&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/xml&quot;</span>
    			<span class="tok-p">},</span>
    			<span class="tok-p">{</span>
    				<span class="tok-nt">&quot;mediaType&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;text/xml&quot;</span>
    			<span class="tok-p">}]</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">}],</span>
        <span class="tok-nt">&quot;links&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
          <span class="tok-p">{</span>
            <span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;https://processing.example.org/oapi-p/jobs&quot;</span><span class="tok-p">,</span>
            <span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;execute&quot;</span><span class="tok-p">,</span>
            <span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Execute endpoint&quot;</span>
          <span class="tok-p">}</span>
        <span class="tok-p">]</span>
    <span class="tok-p">}</span></code></pre>
    </div>
    </div>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="sc_security_considerations"><a class="anchor" href="#sc_security_considerations"></a>4. Security Considerations</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>The OGC API - Processes specifies a Web API that enables the execution of computing processes, the retrieval of metadata describing their purpose and functionality and the retrieval of the results of the process execution. The API makes use of different HTTP methods, namely GET, POST and DELETE. (Note that future extensions could introduce additional HTTP methods.)</p>
    </div>
    <div class="paragraph">
    <p>HTTP methods can be classified as</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Safe, meaning that they do not alter the state of (a resource on) the server, and</p>
    </li>
    <li>
    <p>Idempotent, meaning that can be executed an indefinite number of times and deliver the same result.</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p><a href="#http_methods_safety">Table 6</a> gives an overview of the classification of HTTP the methods used in this standard:</p>
    </div>
    <table id="http_methods_safety" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 6. Classification of HTTP methods</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">HTTP Method</th>
    <th class="tableblock halign-left valign-top">Safe</th>
    <th class="tableblock halign-left valign-top">Idempotent</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">yes</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">yes</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">POST</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">no</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">no</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">DELETE</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">no</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">yes</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="3"><p class="tableblock">Source <a href="#rfc7231">RFC 7231, Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The following resources can be retrieved using the safe HTTP GET method and can contain sensitive information:</p>
    </div>
    <div class="paragraph">
    <p>Requirements class "Core":</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Process list</p>
    </li>
    <li>
    <p>Process description</p>
    </li>
    <li>
    <p>Job status info</p>
    </li>
    <li>
    <p>Job result</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>Requirements class "Job list"</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Job list</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>The following API operations use unsafe HTTP methods, modify resources and therefore require special attention:</p>
    </div>
    <div class="paragraph">
    <p>Requirements class "Core":</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Execute, HTTP POST</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>Requirements class "Dismiss"</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Dismiss, HTTP DELETE</p>
    </li>
    </ul>
    </div>
    <div class="sect2">
    <h3 id="_operations_using_http_get"><a class="anchor" href="#_operations_using_http_get"></a>4.1. Operations using HTTP GET</h3>
    <div class="paragraph">
    <p>Most of the operations defined in this standard are use the safe HTTP GET method. However, the resources that are returned by these operations contain information that could be used to exploit the API. <a href="#table_core_safe_operations_security">Table 7</a> gives an overview of the resources specified in this standard and what kind of information they contain.</p>
    </div>
    <table id="table_core_safe_operations_security" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 7. Requirements class 'Core' - Overview of core operations and returned sensitive information</caption>
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 30%;">
    <col style="width: 10%;">
    <col style="width: 40%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Resource</th>
    <th class="tableblock halign-left valign-top">Path</th>
    <th class="tableblock halign-left valign-top">HTTP method</th>
    <th class="tableblock halign-left valign-top">Information delivered</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Landing page</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">General information about the service, links to API endpoints</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Conformance classes</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/conformance</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">List of conformance classes</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Process list</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/processes</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Process identifiers, links to process descriptions</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Process description</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/processes/{processID}</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Information about a process, e.g. inputs/outputs</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job status info</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs/{jobID}</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Status info, links to results or exceptions</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job results</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs/{jobID}/results</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job results</p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The resources and contained information in more detail:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>The landing page contains links to the API endpoints and so leads to all other resources the API offers.</p>
    </li>
    <li>
    <p>The list of conformance classes could contain information about extensions like "dismiss" that pose additional security issues.</p>
    </li>
    <li>
    <p>The process list contains process identifiers and links to the respective process descriptions.</p>
    </li>
    <li>
    <p>The process description contains all necessary information needed to execute a process. This information can be used to send an JSON execute request to the API that will pass initial sanity checks, for example checks for the correct input/output identifiers. If this barrier is taken by an attacker, issues as discussed in section <a href="#sec_cons_execute">Execute operation</a> can occur.</p>
    </li>
    <li>
    <p>The job status info contains not only status information, but for finished processes also links to results / exceptions. The results of a process execution are a valuable resource as well as the exceptions that could contain hints about why the execution has failed.</p>
    </li>
    </ul>
    </div>
    <table id="table_job_list_operation_security" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 8. Requirements class 'Job List' - Overview of operations and returned sensitive information</caption>
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 30%;">
    <col style="width: 10%;">
    <col style="width: 40%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Resource</th>
    <th class="tableblock halign-left valign-top">Path</th>
    <th class="tableblock halign-left valign-top">HTTP method</th>
    <th class="tableblock halign-left valign-top">Information delivered</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job list</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">GET</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">List of job ids and status info, links to results or exceptions</p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The retrieval of the job list of a process returns the job ids and links to the respective job status.</p>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sec_cons_execute"><a class="anchor" href="#sec_cons_execute"></a>4.2. Execute operation</h3>
    <div class="paragraph">
    <p>The execute operation uses HTTP POST to create new processing jobs (process executions). As discussed above, the HTTP POST method is not safe and it poses the following threats if misused:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>The processing can use up considerable server resources, for example computing time, network traffic (when accessing referenced inputs) or storage space for inputs and outputs.</p>
    </li>
    <li>
    <p>Malicious inputs can be provided. Either inline in the execute request JSON or referenced.</p>
    </li>
    </ul>
    </div>
    <table id="table_core_execute_operation_security" class="tableblock frame-all grid-all stretch">
    <caption class="title">Table 9. Requirements class 'Core' - Overview of the execute operation and returned sensitive information</caption>
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 30%;">
    <col style="width: 10%;">
    <col style="width: 40%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Resource</th>
    <th class="tableblock halign-left valign-top">Path</th>
    <th class="tableblock halign-left valign-top">HTTP method</th>
    <th class="tableblock halign-left valign-top">Information delivered</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job status info</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><code>/jobs</code></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">POST</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Job id, status info, (links to) results or exceptions</p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The ids that are used for new jobs and that are returned in the status info document should be created in a non-guessable way, for example using UUIDs. This will prevent random attempts to get job status information, results / exceptions or even cancel jobs / delete job artifacts.</p>
    </div>
    </div>
    <div class="sect2">
    <h3 id="sec_cons_dismiss"><a class="anchor" href="#sec_cons_dismiss"></a>4.3. Dismiss operation</h3>
    <div class="paragraph">
    <p>The optional dismiss extension uses the HTTP DELETE method and can be used to</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Cancel a running job, and</p>
    </li>
    <li>
    <p>Remove artifacts of a finished job.</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>Both usages pose security related issues. The cancellation of a running job (if not done on purpose) is wasting the resources that the job has used until it was canceled. The same goes for the unwanted removal of artifacts of a finished job. If the dismiss extension is implemented, access control for the operation should be considered. The dismiss operation is idempotent, as it is specified by this standard to be called using a specific job identifier. The first dismiss request to that identifier will result in a HTTP 200 (OK) status code. Continued dismiss requests using the same identifier result in a HTTP 410 (Gone) error code, but nothing else is changed on the server. A successful dismiss request returns a status info document containing the job identifier and the status "dismissed". This status info document has no further security implications.</p>
    </div>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="_requirements_classes_for_encodings"><a class="anchor" href="#_requirements_classes_for_encodings"></a>5. Requirements classes for encodings</h2>
    <div class="sectionbody">
    <div class="sect2">
    <h3 id="_overview_3"><a class="anchor" href="#_overview_3"></a>5.1. Overview</h3>
    <div class="paragraph">
    <p>This clause specifies two pre-defined requirements classes for encodings to be
    used with the OGC API Processes.</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p><a href="#rec_json">JSON</a></p>
    </li>
    <li>
    <p><a href="#rc_html">HTML</a></p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>The JSON encoding is mandatory.</p>
    </div>
    <div class="paragraph">
    <p>The <a href="#rc_core">Core</a> requirements class includes recommendations to support
    <a href="#rec_html">HTML</a> and <a href="#rec_json">JSON</a> as encodings, where practical.</p>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_requirement_class_json"><a class="anchor" href="#_requirement_class_json"></a>5.2. Requirement Class "JSON"</h3>
    <div class="paragraph">
    <p>This section defines the requirements class JSON.</p>
    </div>
    <table id="rc_json" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/json" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/json</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">OGC API - Processes Core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#JSON">JSON</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="req_json_definition" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 28</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/json/definition<br></p>
    </div>
    <div class="paragraph">
    <p><code>200</code>-responses of the server SHALL support the following media type:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p><code>application/json</code></p>
    </li>
    </ul>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="sc_requirements_class_html"><a class="anchor" href="#sc_requirements_class_html"></a>5.3. Requirement Class "HTML"</h3>
    <div class="paragraph">
    <p>This section defines the requirements class HTML.</p>
    </div>
    <table id="rc_html" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/html" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/html</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">OGC API - Processes Core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common/1.0/req/html">API - Common HTML</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#HTML5">HTML5</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="req_html_definition" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 29</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/html/definition<br></p>
    </div>
    <div class="paragraph">
    <p>Every <code>200</code>-response of an operation of the server
    SHALL support the media type <code>text/html</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="req_html_content" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 30</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/html/content<br></p>
    </div>
    <div class="paragraph">
    <p>Every <code>200</code>-response of the server with the media type "text/html" SHALL be a
    <a href="https://www.w3.org/TR/html5/">HTML 5 document</a> that includes the following
    information in the HTML body:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>all information identified in the schemas of the
    <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#responseObject">Response Object</a>
    in the HTML <code>&lt;body/&gt;</code>, and</p>
    </li>
    <li>
    <p>all links in HTML <code>&lt;a/&gt;</code> elements in the HTML <code>&lt;body/&gt;</code>.</p>
    </li>
    </ul>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="requirements-class-openapi_3_0-clause"><a class="anchor" href="#requirements-class-openapi_3_0-clause"></a>6. Requirements Class "OpenAPI 3.0"</h2>
    <div class="sectionbody">
    <div class="sect2">
    <h3 id="_basic_requirements"><a class="anchor" href="#_basic_requirements"></a>6.1. Basic requirements</h3>
    <div class="paragraph">
    <p>APIs conforming to this requirements class are documented as an <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#oasDocument">OpenAPI Document</a>.</p>
    </div>
    <table id="rc_oas30" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/oas30" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/oas30</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web service</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">OGC API - Processes 1.0 Core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi_common-1/1.0/req/oas30">API - Common OpenAPI 3.0</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#OpenAPI">OpenAPI Specification 3.0.1</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="req_oas30_oas-definition-1" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Requirement 31</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/req/oas30/oas-definition-1</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">A</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>An OpenAPI definition in JSON using the media type <code>application/vnd.oai.openapi+json;version=3.0</code> and a HTML version of the API definition using the media type <code>text/html</code> SHALL be available.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="req_oas30_oas-definition-2" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 32</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/oas30/oas-definition-2<br></p>
    </div>
    <div class="paragraph">
    <p>The JSON representation SHALL conform to the
    <a href="#OpenAPI">OpenAPI Specification, version 3.0</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="req_oas30_oas-impl" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 33</strong></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">/req/oas30/oas-impl<br></p>
    <p class="tableblock">The server SHALL implement all capabilities specified in the OpenAPI
    definition.</p></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_complete_definition"><a class="anchor" href="#_complete_definition"></a>6.2. Complete definition</h3>
    <table id="req_oas30_completeness" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 34</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/oas30/completeness<br></p>
    </div>
    <div class="paragraph">
    <p>The OpenAPI definition SHALL specify for each operation all
    <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#httpCodes">HTTP Status Codes</a>
    and
    <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#responseObject">Response Objects</a>
    that the server uses in responses.</p>
    </div>
    <div class="paragraph">
    <p>This includes the successful execution of an operation as well as all error
    situations that originate from the server.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>Note that APIs that, for example, are access-controlled (see <a href="#security">Security</a>), support web cache validation, CORS or that use HTTP redirection will make use of additional HTTP status codes beyond regular codes such as <code>200</code> for successful GET requests and <code>400</code>, <code>404</code> or <code>500</code> for error situations. See <a href="#http_status_codes">HTTP status codes</a>.</p>
    </div>
    <div class="paragraph">
    <p>Clients have to be prepared to receive responses not documented in the OpenAPI definition. For example, additional errors may occur in the transport layer outside of the server.</p>
    </div>
    </div>
    <div class="sect2">
    <h3 id="exceptions"><a class="anchor" href="#exceptions"></a>6.3. Exceptions</h3>
    <table id="req_oas30_exceptions-codes" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 35</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/oas30/exceptions-codes<br></p>
    </div>
    <div class="paragraph">
    <p>For error situations that originate from the server, the API definition
    SHALL cover all applicable HTTP Status Codes.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="exampleblock">
    <div class="title">Example 3. An exception response object definition</div>
    <div class="content">
    <div class="listingblock">
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>description: An error occurred.
    content:
      application/json:
        schema:
          $ref: https://raw.githubusercontent.com/opengeospatial/OAPI/openapi/schemas/exception.yaml
      text/html:
        schema:
          type: string</code></pre>
    </div>
    </div>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="security"><a class="anchor" href="#security"></a>6.4. Security</h3>
    <table id="req_oas30_security" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 36</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/oas30/security<br></p>
    </div>
    <div class="paragraph">
    <p>For cases, where the operations of the server are access-controlled,
    the security scheme(s) SHALL be documented in the OpenAPI definition.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The OpenAPI specification currently supports the following <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#security-scheme-object">security schemes</a>:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>HTTP authentication,</p>
    </li>
    <li>
    <p>an API key (either as a header or as a query parameter),</p>
    </li>
    <li>
    <p>OAuth2&#8217;s common flows (implicit, password, application and access code) as defined in RFC6749, and</p>
    </li>
    <li>
    <p>OpenID Connect Discovery.</p>
    </li>
    </ul>
    </div>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="Job_list"><a class="anchor" href="#Job_list"></a>7. Requirements Class "Job list"</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>This requirement class specifies how to retrieve a job list from the API.</p>
    </div>
    <table id="rc_job-list" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/job-list" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/job-list</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">OGC API - Processes Core</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="sect2">
    <h3 id="_operation_9"><a class="anchor" href="#_operation_9"></a>7.1. Operation</h3>
    <table id="req_job-list_job-list-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 37</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/job-list/job-list-op<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP GET operation at the path <code>/jobs</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_response_9"><a class="anchor" href="#_response_9"></a>7.2. Response</h3>
    <table id="req_core_process-list-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 38</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/job-list/job-list-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a
    response with a HTTP status code 200.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/jobList.yaml">jobList.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title"><a href="https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/jobList.yaml">The following is the schema for the job list</a></div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>type: array
    items:
      $ref: &quot;statusInfo.yaml&quot;</code></pre>
    </div>
    </div>
    <div class="paragraph">
    <p>The schema defines an array of <a href="#schema-statusInfo">status info elements</a>.</p>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of an HTTP GET request for retrieving a list of jobs encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code><span></span>http://processing.example.org/jobs</code></pre>
    </div>
    </div>
    <div class="listingblock">
    <div class="title">The following is an example of a job list encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="json"><span></span><span class="tok-p">[</span>
    	<span class="tok-p">{</span>
    		<span class="tok-nt">&quot;jobID&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;8ca109b4-3b86-4a9c-a284-a6d50f91019e&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;status&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;running&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;message&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Perform step 1/2&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;progress&quot;</span><span class="tok-p">:</span> <span class="tok-mi">50</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;links&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
    			<span class="tok-p">{</span>
    				<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;http://processing.example.org/oapi-p/jobs/8ca109b4-3b86-4a9c-a284-a6d50f91019e&quot;</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;status&quot;</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;hreflang&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;en&quot;</span><span class="tok-p">,</span>
    				<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Job status&quot;</span>
    			<span class="tok-p">}</span>
    		<span class="tok-p">]</span>
    	<span class="tok-p">},</span>
    	<span class="tok-p">{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;0cf773a5-282a-4e23-96cc-f5dab18123e5&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;infos&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;jobID&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;0cf773a5-282a-4e23-96cc-f5dab18123e5&quot;</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;status&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;successful&quot;</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;message&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EchoProcess job finished successful&quot;</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;progress&quot;</span><span class="tok-p">:</span> <span class="tok-mi">100</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;links&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
    				<span class="tok-p">{</span>
    					<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;http://processing.example.org/oapi-p/jobs/0cf773a5-282a-4e23-96cc-f5dab18123e5&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;status&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;hreflang&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;en&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Job status&quot;</span>
    				<span class="tok-p">},</span>
    				<span class="tok-p">{</span>
    					<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;http://processing.example.org/oapi-p/jobs/0cf773a5-282a-4e23-96cc-f5dab18123e5/results&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;results&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;hreflang&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;en&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Job result&quot;</span>
    				<span class="tok-p">}</span>
    			<span class="tok-p">]</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">},</span>
    	<span class="tok-p">{</span>
    		<span class="tok-nt">&quot;id&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;63aadd9c-c0e5-4a7f-80f0-228dbb158f09&quot;</span><span class="tok-p">,</span>
    		<span class="tok-nt">&quot;infos&quot;</span><span class="tok-p">:</span> <span class="tok-p">{</span>
    			<span class="tok-nt">&quot;jobID&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;63aadd9c-c0e5-4a7f-80f0-228dbb158f09&quot;</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;status&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;failed&quot;</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;message&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;EchoProcess job failed&quot;</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;progress&quot;</span><span class="tok-p">:</span> <span class="tok-mi">100</span><span class="tok-p">,</span>
    			<span class="tok-nt">&quot;links&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
    				<span class="tok-p">{</span>
    					<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;http://processing.example.org/oapi-p/jobs/63aadd9c-c0e5-4a7f-80f0-228dbb158f09&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;status&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;hreflang&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;en&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Job status&quot;</span>
    				<span class="tok-p">},</span>
    				<span class="tok-p">{</span>
    					<span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;http://processing.example.org/oapi-p/jobs/63aadd9c-c0e5-4a7f-80f0-228dbb158f09/results&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;exceptions&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;hreflang&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;en&quot;</span><span class="tok-p">,</span>
    					<span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Job exception&quot;</span>
    				<span class="tok-p">}</span>
    			<span class="tok-p">]</span>
    		<span class="tok-p">}</span>
    	<span class="tok-p">}</span>
    <span class="tok-p">]</span></code></pre>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_error_situations_9"><a class="anchor" href="#_error_situations_9"></a>7.3. Error situations</h3>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    <div class="paragraph">
    <p>If the process with the specified identifier does not exist on the server, the status code of the response SHALL be <code>404</code> (see <a href="#req_core_no-such-process">[req_core_no-such-process]</a>).</p>
    </div>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="Callbacks"><a class="anchor" href="#Callbacks"></a>8. Requirements Class "Callback"</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>The Callback conformance class specifies a callback mechanism for completed jobs. In contrast to the pull-based mechanism specified in <a href="#sc_create_job">Create a new job</a> and <a href="#sc_retrieve_status_info">Retrieve status information about a job</a>, this conformance class specifies a push-based mechanism, where a subscriber-URL is passed to the API in the execute request. After the job is completed, the result response is sent to the specified URL.</p>
    </div>
    <table id="rc_callback" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/callback" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/callback</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">OGC API - Processes Core</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="req_callback_job-callback" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 39</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/callback/job-callback<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support callback functions for jobs.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title">The following is an example for a callback in the execute operation</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>callbacks:
        jobCompleted:
          &#39;{$request.body#/subscriber/successUri}&#39;:
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: &#39;#/components/schemas/result&#39;
              responses:
                &#39;202&#39;:
                  description: Results received successfully</code></pre>
    </div>
    </div>
    <div class="paragraph">
    <p>If the server implements this conformance class, the optional subscriber element of the execute request JSON SHALL be used.</p>
    </div>
    <div class="paragraph">
    <p>Adding multiple callbacks is possible for getting progress updates and notifications of the success or failure of a job completion.</p>
    </div>
    <div class="paragraph">
    <p>Further guidance about how to use callbacks can be found in the <a href="https://swagger.io/docs/specification/callbacks/">OpenAPI documentation</a>.</p>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="Dismiss"><a class="anchor" href="#Dismiss"></a>9. Requirements Class "Dismiss"</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>The Dismiss requirement class specifies how to dismiss a job. Dismiss can be seen as canceling a running job or removing artifacts of a finished job.</p>
    </div>
    <table id="rc_dismiss" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Requirements Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/dismiss" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/req/dismiss</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">OGC API - Processes Core</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="sect2">
    <h3 id="_operation_10"><a class="anchor" href="#_operation_10"></a>9.1. Operation</h3>
    <table id="req_dismiss_job-dismiss-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 40</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/dismiss/job-dismiss-op<br></p>
    </div>
    <div class="paragraph">
    <p>The server SHALL support the HTTP DELETE operation at the path <code>/jobs/{jobID}</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_response_10"><a class="anchor" href="#_response_10"></a>9.2. Response</h3>
    <table id="req_dismiss_job-dismiss-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Requirement 41</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/req/dismiss/job-dismiss-success<br></p>
    </div>
    <div class="paragraph">
    <p>A successful execution of the operation SHALL be reported as a
    response with a HTTP status code 200.
    The content of that response SHALL be based upon the OpenAPI
    3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/statusInfo.yaml">statusInfo.yaml</a>. The status SHALL be set to "dismissed".</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="listingblock">
    <div class="title">The following is an example of a dismissed job encoded as JSON.</div>
    <div class="content">
    <pre class="pygments highlight"><code data-lang="json"><span></span><span class="tok-p">{</span>
      <span class="tok-nt">&quot;jobID&quot;</span> <span class="tok-p">:</span> <span class="tok-s2">&quot;81574318-1eb1-4d7c-af61-4b3fbcf33c4f&quot;</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;status&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;dismissed&quot;</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;message&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;Job dismissed&quot;</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;progress&quot;</span><span class="tok-p">:</span> <span class="tok-mi">56</span><span class="tok-p">,</span>
      <span class="tok-nt">&quot;links&quot;</span><span class="tok-p">:</span> <span class="tok-p">[</span>
        <span class="tok-p">{</span>
          <span class="tok-nt">&quot;href&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;http://processing.example.org/oapi-p/jobs&quot;</span><span class="tok-p">,</span>
          <span class="tok-nt">&quot;rel&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;up&quot;</span><span class="tok-p">,</span>
          <span class="tok-nt">&quot;type&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;application/json&quot;</span><span class="tok-p">,</span>
          <span class="tok-nt">&quot;title&quot;</span><span class="tok-p">:</span> <span class="tok-s2">&quot;The job list of this server&quot;</span>
        <span class="tok-p">}</span>
      <span class="tok-p">]</span>
    <span class="tok-p">}</span></code></pre>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_error_situations_10"><a class="anchor" href="#_error_situations_10"></a>9.3. Error situations</h3>
    <div class="paragraph">
    <p>See <a href="#http_status_codes">HTTP status codes</a> for general guidance.</p>
    </div>
    <div class="paragraph">
    <p>If the process with the specified identifier does not exist on the server, the status code of the response SHALL be <code>404</code> (see <a href="#req_core_no-such-process">/req/core/process-exception/no-such-process</a>).</p>
    </div>
    <div class="paragraph">
    <p>If the job with the specified identifier does not exist, the status code of the
    response SHALL be <code>404</code> (see <a href="#req_core_job-exception-no-such-job">/req/core/job-result-exception/no-such-job</a>).</p>
    </div>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="mediatypes"><a class="anchor" href="#mediatypes"></a>10. Media Types</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>JSON media types that would typically be used in a server that supports JSON are:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p><code>application/json</code> for all resources.</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>The typical HTML media type for all "web pages" in a server would be:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p><code>text/html</code>.</p>
    </li>
    </ul>
    </div>
    <div class="paragraph">
    <p>The media type for an OpenAPI 3.0 definition is <code>application/vnd.oai.openapi+json;version=3.0</code> (JSON) or . <code>application/vnd.oai.openapi;version=3.0</code> (YAML).</p>
    </div>
    <div class="admonitionblock note">
    <table>
    <tr>
    <td class="icon">
    <div class="title">Note</div>
    </td>
    <td class="content">
    The OpenAPI media types have not been registered yet with IANA and can change in the future.
    </td>
    </tr>
    </table>
    </div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="additional-api-building-blocks"><a class="anchor" href="#additional-api-building-blocks"></a>11. Additional API Building Blocks</h2>
    <div class="sectionbody">
    <div class="paragraph">
    <p>The core requirements classes of the Processes API standard are designed for the following workflow:</p>
    </div>
    <div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Access the list of available processes</p>
    </li>
    <li>
    <p>Access the description of a specific process</p>
    </li>
    <li>
    <p>Create an execute JSON request (based on the description) and send it to the server via POST</p>
    </li>
    <li>
    <p>Process the status info and/or results</p>
    </li>
    </ol>
    </div>
    <div class="paragraph">
    <p>This workflow is useful for generic clients that are implemented against the JSON schemas and paths specified in this standard. Generic clients can communicate with any server implementing the OGC API - Processes. However, there may be limitations regarding the handling of input and output formats.</p>
    </div>
    <div class="paragraph">
    <p>The approach described above requires implementers of clients to have knowledge about the standard.</p>
    </div>
    <div class="paragraph">
    <p>This standard uses the OpenAPI specification to define the JSON schemas and OpenAPI MAY also be used to describe the concrete API) see <a href="#sc_api_definition">Retrieve an API definition</a>). A variety of tools for automatic code generation exist for the OpenAPI specification. This makes it very easy for client and server implementers to work with APIs defined using OpenAPI. However, as the OGC API - Processes defines several JSON schemas and leaves the concrete data types for input and outputs open, the automatic code generation cannot be used to its full extent. To cope with this and thus make the implementation of clients / servers easier for those that are not familiar with OGC (API) standards, additional alternatives to the process description and the paths to processes and jobs are permitted.</p>
    </div>
    <div class="paragraph">
    <p>The following permissions do not affect the mandatory core requirements.</p>
    </div>
    <table id="per_core_alternative-process-description" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Permission 2</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/per/core/alternative-process-description<br></p>
    </div>
    <div class="paragraph">
    <p>Servers MAY support alternative means of describing the inputs and outputs of a process.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The alternative-process-description permission allows server implementations to describe a process, such as by defining the request and response body of a POST request to a process endpoint using the OpenAPI specification directly (see this  <a href="#example-alternative-process-description">example</a>).</p>
    </div>
    <table id="per_core_alternative-process-paths" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Permission 3</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>/per/core/alternative-process-paths<br></p>
    </div>
    <div class="paragraph">
    <p>Servers MAY support alternative API paths.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The alternative-process-paths permission allows server implementations to specify alternative paths to processes and jobs.</p>
    </div>
    <div class="paragraph">
    <p>An example of an OpenAPI document making use of these building blocks is shown in the following:</p>
    </div>
    <div id="example-alternative-process-description" class="listingblock">
    <div class="content">
    <pre class="pygments highlight"><code data-lang="YAML"><span></span>openapi: 3.0.2
    info:
      title: Alternative OGC API - Processes
      description: This is an alternative OGC API - Processes
      contact:
        email: you@your-company.com
      license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
      version: 1.0.0
    paths:
      /buffer:
        post:
          summary: execute buffer process
          operationId: executeBuffer
          requestBody:
            description: buffer inputs
            content:
              application/json:
                schema:
                  $ref: &#39;#/components/schemas/bufferExecute&#39;
          responses:
            &quot;200&quot;:
              description: buffer created
              content:
                application/json:
                  schema:
                    $ref: &#39;#/components/schemas/bufferResult&#39;
            &quot;400&quot;:
              description: invalid input
    components:
      schemas:
        bufferExecute:
          required:
          - data
          - width
          type: object
          properties:
            data:
              maxItems: 10
              minItems: 1
              type: array
              description: this is possible to provide the abstract in here
              items:
                oneOf:
                - type: string
                  format: application/geo+json
                - type: string
                  format: application/gml+xml
            width:
              maximum: 100
              minimum: 1
              type: integer
              default: 20
        bufferResult:
          type: object
          properties:
            outputs:
              type: array
              items:
                oneOf:
                - type: string
                  format: application/geo+json
                - type: string
                  format: application/gml+xml</code></pre>
    </div>
    </div>
    <div class="paragraph">
    <p>The goals of these additional API building blocks are:</p>
    </div>
    <div class="ulist">
    <ul>
    <li>
    <p>Enabling a more seamless integration of this API with other OGC API standards and</p>
    </li>
    <li>
    <p>Enabling the use of tools to auto-generate clients / servers from the API description.</p>
    </li>
    </ul>
    </div>
    <div style="page-break-after: always;"></div>
    </div>
    </div>
    <div class="sect1">
    <h2 id="_abstract_test_suite_normative"><a class="anchor" href="#_abstract_test_suite_normative"></a>Annex A: Abstract Test Suite (Normative)</h2>
    <div class="sectionbody">
    <div class="sect2">
    <h3 id="_introduction"><a class="anchor" href="#_introduction"></a>A.1. Introduction</h3>
    <div class="paragraph">
    <p>OGC Web APIs are not a Web Services in the traditional sense. Rather, they define the behavior and content of a set of Resources exposed through a Web Application Programing Interface (Web API). Therefore, an API may expose resources in addition to those defined by the standard. A test engine must be able to traverse the API, identify and validate test points, and ignore resource paths which are not to be tested.</p>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_core"><a class="anchor" href="#_conformance_class_core"></a>A.2. Conformance Class Core</h3>
    <table id="ats_core" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">Requirements Class "Core"</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="sect3">
    <h4 id="_landing_page"><a class="anchor" href="#_landing_page"></a>A.2.1. Landing Page /</h4>
    <table id="ats_core_landingpage-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 1</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/landingpage-op</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that a landing page can be retrieved from the expected location.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_landingpage-op">/req/core/landingpage-op</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Issue an HTTP GET request to the root URL <code>/</code></p>
    </li>
    <li>
    <p>Validate the contents of the returned document using test <a href="#ats_core_landingpage-success">/conf/core/landingpage-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_landingpage-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 2</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/landingpage-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the landing page complies with the require structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_landingpage-success">/req/core/landingpage-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that a document was returned with an HTTP status code or 200.</p>
    </li>
    <li>
    <p>Validate the landing page for all supported media types using the resources and tests identified in <a href="#landing-page-schema">Schema and Tests for Landing Pages</a></p>
    </li>
    <li>
    <p>For formats that require manual inspection, perform the following:</p>
    <div class="olist loweralpha">
    <ol class="loweralpha" type="a">
    <li>
    <p>Validate that the landing page includes a "service-desc" and/or "service-doc" link to an API Definition.</p>
    </li>
    <li>
    <p>Validate that the landing page includes a "conformance" link to the conformance class declaration.</p>
    </li>
    <li>
    <p>Validate that the landing page includes a "data" link to the Feature contents.</p>
    </li>
    </ol>
    </div>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The landing page may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the landing page against that schema. All supported formats should be exercised.</p>
    </div>
    <table id="landing-page-schema" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 10. Schema and Tests for Landing Pages</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/landingPage.yaml">landingPage.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/landingPage.yaml">landingPage.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_geojson_content">/conf/geojson/content</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_api_definition_api"><a class="anchor" href="#_api_definition_api"></a>A.2.2. API Definition /api</h4>
    <table id="ats_core_api-definition-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 3</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/api-definition-op</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the API Definition document can be retrieved from the expected location.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_api-definition-op">/req/core/api-definition-op</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Construct a path for the API Definition document that ends with <code>/api</code>.</p>
    </li>
    <li>
    <p>Issue a HTTP GET request on that path</p>
    </li>
    <li>
    <p>Validate the contents of the returned document using test <a href="#ats_core_api-definition-success">/conf/core/api-definition-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_api-definition-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 4</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/api-definition-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the API Definition complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_api-definition-success">/req/core/api-definition-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that a document was returned with a status code 200</p>
    </li>
    <li>
    <p>Validate the API Definition document against an appropriate schema document.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_conformance_path_conformance"><a class="anchor" href="#_conformance_path_conformance"></a>A.2.3. Conformance Path /conformance</h4>
    <table id="ats_core_conformance-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 5</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/conformance-op</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that a Conformance Declaration can be retrieved from the expected location.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_conformance-op">/req/core/conformance-op</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Construct a path for each "conformance" link on the landing page as well as for the {root}/conformance path.</p>
    </li>
    <li>
    <p>Issue an HTTP GET request on each path</p>
    </li>
    <li>
    <p>Validate the contents of the returned document using test <a href="#ats_core_conformance-success">/conf/core/conformance-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_conformance-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 6</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/conformance-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the Conformance Declaration response complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_conformance-success">/req/core/conformance-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that a document was returned with an HTTP status code of 200.</p>
    </li>
    <li>
    <p>Validate the response document against OpenAPI 3.0 schema link: <a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/confClasses.yaml">confClasses.yaml</a></p>
    </li>
    <li>
    <p>Validate that the document includes the conformance class "http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core"</p>
    </li>
    <li>
    <p>Validate that the document list all OGC API conformance classes that the API implements.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_http_1_1"><a class="anchor" href="#_http_1_1"></a>A.2.4. HTTP 1.1</h4>
    <table id="ats_core_http" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 7</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/http</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the resource paths advertised through the API conform with HTTP 1.1 and, where appropriate, TLS.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_http">/req/core/http</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>All compliance tests SHALL be configured to use the HTTP 1.1 protocol exclusively.</p>
    </li>
    <li>
    <p>For APIs which support HTTPS, all compliance tests SHALL be configured to use <a href="#rfc2818">HTTP over TLS</a> (RFC 2818) with their HTTP 1.1 protocol.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect3">
    <h4 id="_processes_processes"><a class="anchor" href="#_processes_processes"></a>A.2.5. Processes /processes</h4>
    <div class="sect4">
    <h5 id="_process_list"><a class="anchor" href="#_process_list"></a>A.2.5.1. Process list</h5>
    <table id="ats_core_process-list" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 8</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/process-list</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that information about the processes can be retrieved from the expected location.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_process-list">/req/core/process-list</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Issue an HTTP GET request to the URL {root}/processes</p>
    </li>
    <li>
    <p>Validate the contents of the returned document using test <a href="#ats_core_process-list-success">/conf/core/process-list-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_process-list-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 9</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/process-list-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the process list content complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_process-list-success">/req/core/process-list-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that a document was returned with an HTTP status code of 200.</p>
    </li>
    <li>
    <p>Validate the process list content for all supported media types using the resources and tests identified in <a href="#process-list-schema">Schema and Tests for Lists content</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The process list may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the against that schema. All supported formats should be exercised.</p>
    </div>
    <table id="process-list-schema" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 11. Schema and Tests for Lists content</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/processList.yaml">processList.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/processList.yaml">processList.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect4">
    <h5 id="_process_description_processesprocessid"><a class="anchor" href="#_process_description_processesprocessid"></a>A.2.5.2. Process description /processes/{processID}</h5>
    <table id="ats_core_process" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 10</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/process</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that a process description can be retrieved from the expected location.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_process">/req/core/process</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>For every Process described in the process list content, issue an HTTP GET request to the URL <code>/processes/{processID}</code> where <code>{processID}</code> is the <code>id</code> property for the process.
    . Validate the response using the test <a href="#ats_core_process-success">/conf/core/process-success</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_process-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 11</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/process-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the content complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_process-success">/req/core/process-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that a document was returned with an HTTP status code of 200.</p>
    </li>
    <li>
    <p>Verify that the content of the response is valid description of the interface of the process for all supported process description models.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The interface of a process may be describing using a number of different models or process description languages. The following table identifies the applicable schema document for each process description model described in this standard.</p>
    </div>
    <table id="process-description-model" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 12. Schema and Tests for Process Description Models</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Model</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">OGC Process Description JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/schemas/process.yaml">process.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#req_ogc-process-description_json-encoding">/conf/ogc-process-description/json-encoding</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect4">
    <h5 id="_process_exception"><a class="anchor" href="#_process_exception"></a>A.2.5.3. Process exception</h5>
    <table id="ats_core_process-exception-no-such-process" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 12</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/process-exception-no-such-process</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that an invalid process identifier is handled correctly.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_process-exception-no-such-process">/req/core/process-exception-no-such-process</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Issue an HTTP GET request to a URL that includes the <code>{processID}</code> as a path element using a non-existent process identifier.</p>
    </li>
    <li>
    <p>Validate that the document was returned with a 404.</p>
    </li>
    <li>
    <p>Validate that the document contains the exception code "NoSuchProcess".</p>
    </li>
    <li>
    <p>Validate the document for all supported media types using the resources and tests identified in <a href="#no-such-process">Schema and Tests for Non-existent Process</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>An exception response caused by the use of an invalid process identifier may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the response. All supported formats should be exercised.</p>
    </div>
    <table id="no-such-process" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 13. Schema and Tests for Non-existent Process</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    <div class="sect3">
    <h4 id="_jobs"><a class="anchor" href="#_jobs"></a>A.2.6. Jobs</h4>
    <div class="sect4">
    <h5 id="_job_creation_jobs"><a class="anchor" href="#_job_creation_jobs"></a>A.2.6.1. Job creation /jobs</h5>
    <table id="ats_core_job-creation-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 13</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-op</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the creation of a new job.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-creation-op">/req/core/job-creation-op</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Issue an HTTP POST request to the URL '/jobs' for each execution mode according to the test <a href="#ats_core_job-creation-mode">/conf/core/job-creation-mode</a>.</p>
    </li>
    <li>
    <p>Validate the contents of the POST request using the test <a href="#ats_core_job-creation-request">/conf/core/job-creation-request</a>.</p>
    </li>
    <li>
    <p>Validate the creation of the job according to the execution mode using test <a href="#ats_core_job-creation-mode">/conf/core/job-creation-mode</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-creation-request" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 14</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-request</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the body of a job creation operation complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-creation-request">/req/core/job-creation-request</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify the contents of the request body against the OpenAPI 3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/execute.yaml">execute.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-creation-mode" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 15</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-mode</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the creation of a new job according to its execution mode.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-creation-mode">/req/core/job-creation-mode</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Create a job for each execution mode according to the test <a href="#ats_core_job-creation-op">/req/core/job-creation-op</a>.</p>
    </li>
    <li>
    <p>Validate the creation of the job according to the execution mode using the resource and tests identified in <a href="#job-creation-response">Schema and Tests for Job Creation</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>A job may be executed in one of the three modes; <code>sync</code>, <code>async</code> or <code>auto</code>.  The following tables identified the applicable test to check based on the execution mode.</p>
    </div>
    <table id="job-creation-response" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 14. Schema and Tests for Job Creation</caption>
    <colgroup>
    <col style="width: 50%;">
    <col style="width: 50%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Mode</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">sync</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_core_job-creation-success-sync">/conf/core/job-creation-success-sync</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">async</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_core_job-creation-success-async">/conf/core/job-creation-success-async</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">auto</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_core_job-creation-success-auto">/conf/core/job-creation-success-auto</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-creation-success-async" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 16</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-success-async</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the result of a job that has been created using the <code>async</code> execution mode.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-creation-success-async">/req/core/job-creation-success-async</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that result of the job was returned with an HTTP status code 201.</p>
    </li>
    <li>
    <p>Validate the HTTP headers of the result using the test <a href="#ats_core_job-creation-success-header-async">/conf/core/job-creation-success-header-async</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-creation-success-header-async" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 17</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-success-header-async</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the HTTP header for an asynchronously executed job.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-creation-success-header-async">/req/core/job-creation-success-header-async</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that the response contains the 'Location' header.</p>
    </li>
    <li>
    <p>Issue an HTTP GET request to the URL that is the value of the 'Location' header.</p>
    </li>
    <li>
    <p>Validate the result of resolving the 'Location' header URL using the test <a href="#ats_core_job-result-op">/conf/core/job-result-op</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-creation-success-sync" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 18</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-success-sync</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the result of a job that has been created using the <code>sync</code> execution mode.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-creation-success-sync">/req/core/job-creation-success-sync</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that result of the job was returned with a status code 200.</p>
    </li>
    <li>
    <p>Validate the content of the result using the resource and tests identified in <a href="#sync-success-response">Schema and Tests for the Response of a Synchronously Executed Job</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The type of response a job generates is determined by the value of the <code>response</code> attribute.  The value of the <code>response</code> attribute may be <code>document</code> or <code>raw</code>.  The following table identified the applicable test to check based on the value of the <code>response</code> attribute.</p>
    </div>
    <table id="sync-success-response" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 15. Schema and Tests for the Response of a Synchronously Executed Job</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Response Type</th>
    <th class="tableblock halign-left valign-top">Schema</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">document</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/results.yaml">results.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_core_job-result-success">/conf/core/job-result-success</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">raw</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">N/A</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_core_job-creation-success-sync-raw">/conf/core/job-creation-success-sync-raw</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-creation-success-sync-raw" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 19</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-success-sync-raw</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the job result when the <code>response</code> attribute is set to <code>raw</code>.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-creation-success-sync">/req/core/job-creation-success-sync-raw</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that the result of the job was returned with an HTTP status code 200.</p>
    </li>
    <li>
    <p>Get a description of the executed process using test <a href="#ats_core_process">/conf/core/process</a>.</p>
    </li>
    <li>
    <p>From the process description, note the expected media type(s) for the output that was specified in the execute request body.</p>
    </li>
    <li>
    <p>Verify that the response is of the expected media type.</p>
    </li>
    <li>
    <p>If the response has an associated schema, validate the response against that schema.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect4">
    <h5 id="_job_status_jobsjobid"><a class="anchor" href="#_job_status_jobsjobid"></a>A.2.6.2. Job status /jobs/{jobID}</h5>
    <table id="ats_core_job-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 20</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/fc-op</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the status info of a job can be retrieved.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_fc-op">/req/core/fc-op</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Create a job as per <a href="#ats_core_job-creations-op">/req/core/job-creation-op</a> and note the {jobID} assigned to the job.</p>
    </li>
    <li>
    <p>Issue an HTTP GET request to the URL '/jobs/{jobID}'.</p>
    </li>
    <li>
    <p>Validate the contents of the returned document using the test <a href="#ats_job-success">/conf/core/job-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 21</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the job status info complies with the require structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-success">/req/core/job-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that the document was returned with an HTTP status code of 200.</p>
    </li>
    <li>
    <p>Validate the job status info for all supported media types using the resources and tests identified in <a href="#job-status-info-schema">Schema and Tests for the Job Status Info</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The status info page for a job may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the status info against that schema. All supported formats should be exercised.</p>
    </div>
    <table id="job-status-info-schema" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 16. Schema and Tests for the Job Status Info</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/landingPage.yaml">statusInfo.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/landingPage.yaml">statusInfo.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>~</p>
    </div>
    <table id="ats_core_job-exception-no-such-job" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 22</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-exception-no-such-job</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that an invalid job identifier is handled correctly.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-exception-no-such-job">/req/core/job-exception-no-such-job</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Issue an HTTP GET request to the URL that includes the <code>{jobID}</code> as a path element using a non-existent job identifier.</p>
    </li>
    <li>
    <p>Validate that the document was returned with a 404.</p>
    </li>
    <li>
    <p>Validate that the document contains the exception code "NoSuchJob".</p>
    </li>
    <li>
    <p>Validate the document for all supported media types using the resources and tests identified in <a href="#job-exception-no-such-job">Schema and Tests for the Job Result for Non-existent Job</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>An exception response caused by the use of an invalid job identifier may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the response. All supported formats should be exercised.</p>
    </div>
    <table id="job-exception-no-such-job" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 17. Schema and Tests for the Job Result for Non-existent Job</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect4">
    <h5 id="_job_results_jobsjobidresults"><a class="anchor" href="#_job_results_jobsjobidresults"></a>A.2.6.3. Job results /jobs/{jobID}/results</h5>
    <table id="ats_core_job-result-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 23</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-result</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the results of a job can be retrieved.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-result">/req/core/job-result</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Create a job as per <a href="#ats_core_job-creation-op">/req/core/job-creation-op</a> and note the {jobID} assigned to the job.</p>
    </li>
    <li>
    <p>Issue an HTTP GET request to the URL '/jobs/{jobID}/results'.</p>
    </li>
    <li>
    <p>Validate that the document was returned with a status code 200.</p>
    </li>
    <li>
    <p>Validate the contents of the returned document using the test <a href="#ats_job-result-success">/conf/core/job-result-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-result-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 24</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-result-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the job result complies with the require structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-result-success">/req/core/job-result-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the job result for all supported media types using the resources and tests identified in <a href="#job-result-schema">Schema and Tests for the Job Result</a></p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The job result page for a job may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the status info against that schema.  All supported formats should be exercised.</p>
    </div>
    <table id="job-result-schema" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 18. Schema and Tests for the Job Result</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/landingPage.yaml">result.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/landingPage.yaml">result.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-result-exception-no-such-job" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 25</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-result-failed</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the job result retrieved using an invalid job identifier complies with the require structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-result-exception-no-such-job">/req/core/job-result-exception-no-such-job</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Issue an HTTP GET request to the URL '/jobs/{jobID}/results' using an invalid {jobID}.</p>
    </li>
    <li>
    <p>Validate that the document was returned with a 404.</p>
    </li>
    <li>
    <p>Validate that the document contains the exception code "NoSuchJob".</p>
    </li>
    <li>
    <p>Validate the document for all supported media types using the resources and tests identified in <a href="#job-result-exception-no-such-job">Schema and Tests for the Job Result for Non-existent Job</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The job result page for a job may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the job result for a non-existent job against that schema.  All supported formats should be exercised.</p>
    </div>
    <table id="job-result-exception-no-such-job" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 19. Schema and Tests for the Job Result for Non-existent Job</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-result-exception-result-not-ready" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 26</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-result-exception-result-not-ready</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the job result retrieved for an incomplete job complies with the require structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-result-exception-result-not-ready">/req/core/job-result-exception-result-not-ready</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Create a job as per <a href="#ats_core_job-creation-op">/req/core/job-creation-op</a> and note the {jobID} assigned to the job; ensure that the job is long-running.</p>
    </li>
    <li>
    <p>Issue an HTTP GET request to the URL '/jobs/{jobID}/results' before the job completes execution.</p>
    </li>
    <li>
    <p>Validate that the document was returned with a 404.</p>
    </li>
    <li>
    <p>Validate that the document contains the exception code "ResultNotReady".</p>
    </li>
    <li>
    <p>Validate the document for all supported media types using the resources and tests identified in <a href="#job-result-exception-result-not-ready">Schema and Tests for the Job Result for an Incomplete Job</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The job result page for a job may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the job results for an incomplete job against that schema.  All supported formats should be exercised.</p>
    </div>
    <table id="job-result-exception-result-not-ready" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 20. Schema and Tests for the Job Result for an Incomplete Job</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_core_job-result-failed" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 27</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-result-failed</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the job result for a failed job complies with the require structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_core_job-result-failed">/req/core/job-result-failed</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Create a job as per <a href="#atd_core_job-creation-op">/req/core/job-creation-op</a> but arrange a priori that the job will fail; note the {jobID} assigned to the job.</p>
    </li>
    <li>
    <p>Ensure that the failed job will not result in an HTTP error code of 404.</p>
    </li>
    <li>
    <p>Issue an HTTP GET request to the URL '/jobs/{jobID}/results'.</p>
    </li>
    <li>
    <p>Validate that the document was returned with a HTTP error code (4XX or 5XX).</p>
    </li>
    <li>
    <p>Validate that the document contains an exception code that corresponds to the reason the job failed (e.g. InvalidParameterValue for invalid input data).</p>
    </li>
    <li>
    <p>Validate the document for all supported media types using the resources and tests identified in <a href="#job-result-failed-schema">Schema and Tests for the Job Result for a Failed Job</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The job result page for a job may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the job result for a failed job against that schema.  All supported formats should be exercised.</p>
    </div>
    <table id="job-result-failed-schema" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 21. Schema and Tests for the Job Result for a Failed Job</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml">exception.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    </div>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_ogc_process_description"><a class="anchor" href="#_conformance_class_ogc_process_description"></a>A.3. Conformance Class OGC Process Description</h3>
    <table id="ats_ogc-process-description" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/ogc-process-description" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/ogc-process-description</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_ogc-process-description">Requirements Class "OGC Process Description"</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_ogc-process-description_json-encoding" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 28</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/core/job-creation-request</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate a JSON-encoded OGC process description complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_ogc-process-description_json-encoding">/req/ogc-process-description/json-encoding</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify the contents of the request body against the OpenAPI 3.0 schema <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/process.yaml">process.yaml</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_json"><a class="anchor" href="#_conformance_class_json"></a>A.4. Conformance Class JSON</h3>
    <table id="ats_json" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/json" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/json</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">Requirements Class "Core"</a></p></td>
    </tr>
    </tbody>
    </table>
    <table class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 29</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/json/definition</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify support for JSON.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_json_definition">/req/json/definition</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>A resource is requested with response media type of <code>application/json</code>.</p>
    </li>
    <li>
    <p>All <code>200</code> responses SHALL support the following media types: <code>application/json</code> for all resources.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_html"><a class="anchor" href="#_conformance_class_html"></a>A.5. Conformance Class HTML</h3>
    <table id="ats_html" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/html" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/html</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_html">Requirements Class "HTML"</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_core">Conformance Class 'Core'</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_html_content" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 30</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/html/content</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify the content of an HTML document given an input document and schema.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_html_content">/req/html/content</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that the document is an <a href="https://www.w3.org/TR/html5/">HTML 5 document</a></p>
    </li>
    <li>
    <p>Manually inspect the document and verify that the HTML body contains:</p>
    <div class="ulist">
    <ul>
    <li>
    <p>all information in the schemas of the <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#responseObject">Response Object</a> in the HTML <code>&lt;body/&gt;</code></p>
    </li>
    <li>
    <p>all links in HTML <code>&lt;a/&gt;</code> elements in the HTML <code>&lt;body/&gt;</code>.</p>
    </li>
    </ul>
    </div>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_html_definition" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 31</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/html/definition</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify support for HTML</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_html_definition">/req/html/definition</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that every <code>200</code> response of every operation of the API where HTML was requested is of media type <code>text/html</code>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_openapi_3_0"><a class="anchor" href="#_conformance_class_openapi_3_0"></a>A.6. Conformance Class OpenAPI 3.0</h3>
    <table id="ats_oas30" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/oas30" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/oas30</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_oas30">Requirements Class "OpenAPI Specification 3.0"</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Dependency</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_core">Conformance Class 'Core'</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_oas30_completeness" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 32</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/oas30/completeness</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify the completeness of an OpenAPI document.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_oas30_completeness">/req/oas30/completeness</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that for each operation, the OpenAPI document describes all <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#httpCodes">HTTP Status Codes</a> and <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#responseObject">Response Objects</a> that the API uses in responses.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_oas30_exceptions-codes" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 33</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/oas30/exceptions-codes</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that the OpenAPI document fully describes potential exception codes.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_oas30_exceptions-codes">/req/oas30/exceptions-codes</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that for each operation, the OpenAPI document describes all <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#httpCodes">HTTP Status Codes</a> that may be generated.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_oas30_oas-definition-1" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 34</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/oas30/oas-definition-1</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that JSON and HTML versions of the OpenAPI document are available.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_oas30_oas-definition-1">/req/oas30/oas-definition-1</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Verify that an OpenAPI definition in JSON is available using the media type <code>application/vnd.oai.openapi+json;version=3.0</code> and link relation <code>service-desc</code></p>
    </li>
    <li>
    <p>Verify that an HTML version of the API definition is available using the media type <code>text/html</code> and link relation <code>service-doc</code>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_oas30_oas-definition-2" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 35</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/oas30/oas-definition-2</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that the OpenAPI document is valid JSON.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_oas30_oas-definition-2">/req/oas30/oas-definition-2</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that the JSON representation conforms to the <a href="#OpenAPI">OpenAPI Specification, version 3.0</a>.</p>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_oas30_oas-impl" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 36</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/oas30/oas-impl</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that all capabilities specified in the OpenAPI definition are implemented by the API.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_oas30_oas-impl">/req/oas30/oas-impl</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Construct a path from each URL template including all server URL options and all enumerated path parameters.</p>
    </li>
    <li>
    <p>For each path defined in the OpenAPI document, validate that the path performs in accordance with the API definition and the API-Features standard.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_oas30_security" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 37</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/oas30/security</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Verify that any authentication protocols implemented by the API are documented in the OpenAPI document.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_oas30_security">/req/oas30/security</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Identify all authentication protocols supported by the API.</p>
    </li>
    <li>
    <p>Validate that each authentication protocol is described in the OpenAPI document by a Security Schema Object and its use is specified by a Security Requirement Object.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_job_list"><a class="anchor" href="#_conformance_class_job_list"></a>A.7. Conformance Class Job list</h3>
    <table id="ats_job-list" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/job-list" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/job-list</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">Requirements Class "Core"</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_job-list_job-list-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 38</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/job-list/job-list-op</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that information about jobs can be retrieved from the expected location.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_job-list_job-list-op">/req/job-list/job-list-op</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Issue an HTTP GET request to the URL /jobs.</p>
    </li>
    <li>
    <p>Validate the contents of the returned document using test <a href="#ats_job-list_job-list-success">/conf/job-list/job-list-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_job-list_job-list-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 39</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/job-list/job-list-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the job list content complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_job-list_job-list-success">/req/job-list/job-list-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that a document was returned with an HTTP status code of 200.</p>
    </li>
    <li>
    <p>Validate the job list content for all supported media types using the resources and tests identified in <a href="#job-list-schema">Schema and Tests for Job List Content</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>A job list may be retrieved in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the against that schema. All supported formats should be exercised.</p>
    </div>
    <table id="job-list-schema" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 22. Schema and Tests for Job List Content</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/jobList.yaml">jobList.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/jobList.yaml">jobList.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_callback"><a class="anchor" href="#_conformance_class_callback"></a>A.8. Conformance Class Callback</h3>
    <table id="ats_callback" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/callback" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/callback</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">Requirements Class "Core"</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_callback_job-callback" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 40</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/callback/job-callback</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate the passing of a subscriber-URL in an execute request.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_callback_job-callback">/req/callback/job-callback</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Configure a URL endpoint to accept message body from the server.</p>
    </li>
    <li>
    <p>Create an asynchronous execute request that includes the optional <code>subscriber</code> key (see <a href="https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/schemas/execute.yaml">execute.yaml</a>.</p>
    </li>
    <li>
    <p>Execute the asynchronous job using test <a href="#ats_core_job-creation-op">/conf/core/job-creation-request</a>.</p>
    </li>
    <li>
    <p>Validate the job result is received by the specified callback URL.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    </div>
    <div class="sect2">
    <h3 id="_conformance_class_dismiss"><a class="anchor" href="#_conformance_class_dismiss"></a>A.9. Conformance Class Dismiss</h3>
    <table id="ats_dismiss" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 20%;">
    <col style="width: 80%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><strong>Conformance Class</strong></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top" colspan="2"><p class="tableblock"><a href="http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/dismiss" class="bare">http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/dismiss</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Target type</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Web API</p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">Requirements class</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#rc_core">Requirements Class "Core"</a></p></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_dismiss_job-dismiss-op" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 41</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/dismiss/job-dismiss-op</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that a running job can be dismissed.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_dismiss_job-dismiss-op">/req/dismiss/job-dismiss-op</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Create an asynchronous job as per test <a href="#ats_core_job-creation-op">/conf/core/job-creation-request*</a>; not the job identifier, {jobID}, assigned to the job.</p>
    </li>
    <li>
    <p>Issue an HTTP DELETE operation to the URL '/jobs/{jobID}'.</p>
    </li>
    <li>
    <p>Validate the contents of the returned document using test <a href="#ats_dismiss_job-dismiss-success">/conf/dismiss/job-dismiss-success</a>.</p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <table id="ats_dismiss_job-dismiss-success" class="tableblock frame-all grid-all" style="width: 90%;">
    <colgroup>
    <col style="width: 25%;">
    <col style="width: 75%;">
    </colgroup>
    <tbody>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock"><strong>Abstract Test 42</strong></p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><strong>/conf/dismiss/job-dismiss-success</strong></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Purpose</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p>Validate that the content returned when dismissing a job complies with the required structure and contents.</p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Requirement</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
    <p><a href="#req_dismiss_job-dismiss-success">/req/dismiss/job-dismiss-success</a></p>
    </div></div></td>
    </tr>
    <tr>
    <td class="tableblock halign-center valign-top"><p class="tableblock">Test Method</p></td>
    <td class="tableblock halign-left valign-top"><div class="content"><div class="olist arabic">
    <ol class="arabic">
    <li>
    <p>Validate that a document was returned with an HTTP status code of 200.</p>
    </li>
    <li>
    <p>Validate that the status is the response is set to "dismissed".</p>
    </li>
    <li>
    <p>Validate the process list content for all supported media types using the resources and tests identified in <a href="#job-dismiss-schema">Schema and Tests for Dismissing a Job</a></p>
    </li>
    </ol>
    </div></div></td>
    </tr>
    </tbody>
    </table>
    <div class="paragraph">
    <p>The response to dismissing a job can be presented in a number of different formats. The following table identifies the applicable schema document for each format and the test to be used to validate the against that schema. All supported formats should be exercised.</p>
    </div>
    <table id="job-dismiss-schema" class="tableblock frame-all grid-all" style="width: 90%;">
    <caption class="title">Table 23. Schema and Tests for Dismissing a Job</caption>
    <colgroup>
    <col style="width: 33.3333%;">
    <col style="width: 33.3333%;">
    <col style="width: 33.3334%;">
    </colgroup>
    <thead>
    <tr>
    <th class="tableblock halign-left valign-top">Format</th>
    <th class="tableblock halign-left valign-top">Schema Document</th>
    <th class="tableblock halign-left valign-top">Test ID</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">HTML</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/statusInfo.yaml">statusInfo.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_html_content">/conf/html/content</a></p></td>
    </tr>
    <tr>
    <td class="tableblock halign-left valign-top"><p class="tableblock">JSON</p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="http://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/statusInfo.yaml">statusInfo.yaml</a></p></td>
    <td class="tableblock halign-left valign-top"><p class="tableblock"><a href="#ats_json_content">/conf/json/content</a></p></td>
    </tr>
    </tbody>
    </table>
    <div style="page-break-after: always;"></div>
    </div>
    </div>
    </div>
    </div>

tags:
- name: Capabilities
  description: Essential characteristics of this API including information about the data.
- name: Processes
  description: Access to processes.
paths:
  /:
    get:
      tags:
      - Capabilities
      summary: landing page of this API
      description: The landing page provides links to the API definition, the Conformance statements and the metadata about the processes offered by this service.
      operationId: getLandingPage
      responses:
        "200":
          description: links to the API capabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
  /conformance:
    get:
      tags:
      - Conformance
      summary: information about standards that this API conforms to
      description: 'list all requirements classes specified in a standard (e.g., WPS REST/JSON Binding Part 1: Core) that the server conforms to'
      operationId: getRequirementsClasses
      responses:
        "200":
          description: the URIs of all requirements classes supported by the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confClasses'
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  /processes:
    get:
      tags:
      - Processes
      summary: retrieve available processes
      description: TODO
      operationId: getProcesses
      responses:
        "200":
          description: Information about the available processes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/processList'
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  /processes/{id}:
    get:
      tags:
      - ProcessDescription
      summary: retrieve a process description
      operationId: getProcessDescription
      parameters:
      - name: id
        in: path
        description: The id of a process
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: buffer
      responses:
        "200":
          description: A process description.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/process'
              example:
                id: buffer
                title: Buffer process
                description: Buffer process
                keywords:
                - process
                - buffer
                inputs:
                - id: features
                  title: features
                  description: The features to buffer
                  formats:
                  - mimeType: application/json
                    maximumMegabytes: 3
                    default: true
                  - mimeType: application/x-zipped-shp
                    maximumMegabytes: 4
                - id: width
                  title: width
                  description: The width of the buffer
                  literalDataDomain:
                    dataType:
                      name: double
                    valueDefinition:
                      defaultValue: 1000
                    uom: meters
                outputs:
                - id: result
                  title: result
                  description: The buffered features
                  formats:
                  - mimeType: application/json
                    default: true
                  - mimeType: application/x-zipped-shp
                version: 1.1
                jobControlOptions:
                - sync-execute
                - async-execute
                outputTransmission:
                - value
                - reference
                links:
                - rel: canonical
                  href: https://virtserver.swaggerhub.com/geoprocessing/WPS/0./processes/buffer/jobs
                  type: application/json
                  title: Execute endpoint
        "404":
          description: The process with id {id} does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  /processes/{id}/jobs:
    get:
      tags:
      - JobList
      summary: retrieve the list of jobs for a process.
      operationId: getJobList
      parameters:
      - name: id
        in: path
        description: The id of a process.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A list of jobs for this process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobList'
        "404":
          description: The process with id {id} does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    post:
      tags:
      - Execute
      summary: execute a process.
      operationId: execute
      parameters:
      - name: id
        in: path
        description: The id of a process.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Mandatory execute request JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/execute'
        required: true
      responses:
        "200":
          description: Result of a synchronous execution.
          content:
            /*:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "201":
          description: Started execution. Created job.
          headers:
            Location:
              description: URL to check the status of the execution/job.
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: The process with id {id} does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  /processes/{id}/jobs/{jobID}:
    get:
      tags:
      - Status
      summary: retrieve the status of a job
      operationId: getStatus
      parameters:
      - name: id
        in: path
        description: The id of a process
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: jobID
        in: path
        description: The id of a job
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The status of a job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statusInfo'
        "404":
          description: The process with id {id} or the job with id {jobID} does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  /processes/{id}/jobs/{jobID}/results:
    get:
      tags:
      - Result
      summary: retrieve the result(s) of a job
      operationId: getResult
      parameters:
      - name: id
        in: path
        description: The id of a process
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: jobID
        in: path
        description: The id of a job
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The result of a job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'
        "404":
          description: The process with id {id} or the job with id {jobID} does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: The job execution failed due to a internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
components:
  schemas:
    additionalParameter:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: array
          items:
            oneOf:
            - type: string
            - type: number
            - type: integer
            - type: array
              items: {}
            - type: object
    allowedValues:
      type: array
      items:
        oneOf:
        - type: string
        - $ref: '#/components/schemas/range'
    anyValue:
      type: object
      properties:
        anyValue:
          type: boolean
          default: true
    boundingBoxData:
      required:
      - bbox
      type: object
      properties:
        crs:
          type: string
          format: uri
        bbox:
          maxItems: 6
          minItems: 4
          type: array
          items:
            type: number
    boundingBoxDataType:
      required:
      - supportedCRS
      type: object
      properties:
        supportedCRS:
          type: array
          items:
            $ref: '#/components/schemas/supportedCRS'
    complexDataType:
      required:
      - formats
      type: object
      properties:
        formats:
          type: array
          items:
            $ref: '#/components/schemas/formatDescription'
    confClasses:
      required:
      - conformsTo
      type: object
      properties:
        conformsTo:
          type: array
          items:
            type: string
            example: http://www.opengis.net/spec/ogcapi_processes/1.0/req/core
    descriptionType:
      required:
      - id
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/metadata'
        additionalParameters:
          allOf:
          - $ref: '#/components/schemas/metadata'
          - type: object
            properties:
              parameters:
                type: array
                items:
                  $ref: '#/components/schemas/additionalParameter'
    exception:
      required:
      - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    execute:
      required:
      - id
      - mode
      - outputs
      - response
      type: object
      properties:
        id:
          type: string
        inputs:
          $ref: '#/components/schemas/input'
        outputs:
          $ref: '#/components/schemas/output'
        mode:
          type: string
          enum:
          - sync
          - async
          - auto
        response:
          type: string
          enum:
          - raw
          - document
        subscriber:
          $ref: '#/components/schemas/subscriber'
    format:
      required:
      - mimeType
      type: object
      properties:
        mimeType:
          type: string
        schema:
          type: string
        encoding:
          type: string
    formatDescription:
      allOf:
      - $ref: '#/components/schemas/format'
      - type: object
        properties:
          maximumMegabytes:
            type: integer
          default:
            type: boolean
            default: false
    inlineOrRefData:
      type: object
      properties:
        dataType:
          $ref: '#/components/schemas/nameReferenceType'
        uom:
          $ref: '#/components/schemas/nameReferenceType'
        format:
          $ref: '#/components/schemas/format'
        href:
          type: string
          format: uri
        value:
          oneOf:
          - type: string
          - type: number
          - type: boolean
          - type: object
      oneOf:
      - required:
        - href
      - required:
        - value
    input:
      type: object
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/inlineOrRefData'
        - $ref: '#/components/schemas/boundingBoxData'
        - $ref: '#/components/schemas/input'
        - type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/inlineOrRefData'
            - $ref: '#/components/schemas/boundingBoxData'
            - $ref: '#/components/schemas/input'
    inputDescription:
      allOf:
      - $ref: '#/components/schemas/descriptionType'
      - type: object
        properties:
          input:
            oneOf:
            - $ref: '#/components/schemas/complexDataType'
            - $ref: '#/components/schemas/literalDataType'
            - $ref: '#/components/schemas/boundingBoxDataType'
          minOccurs:
            type: integer
          maxOccurs:
            oneOf:
            - type: integer
            - type: string
              enum:
              - unbounded
          observedProperty:
            $ref: '#/components/schemas/observedProperty'
    jobControlOptions:
      type: string
      enum:
      - sync-execute
      - async-execute
    jobList:
      type: array
      items:
        $ref: '#/components/schemas/statusInfo'
    landingPage:
      required:
      - links
      type: object
      properties:
        title:
          type: string
          example: Example processing server
        description:
          type: string
          example: Example server implementing the OGC API - Processes 1.0
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      required:
      - href
      type: object
      properties:
        href:
          type: string
        rel:
          type: string
          example: service
        type:
          type: string
          example: application/json
        hreflang:
          type: string
          example: en
        title:
          type: string
    literalDataDomain:
      type: object
      properties:
        valueDefinition:
          oneOf:
          - $ref: '#/components/schemas/allowedValues'
          - $ref: '#/components/schemas/anyValue'
          - $ref: '#/components/schemas/valuesReference'
        defaultValue:
          type: string
        dataType:
          $ref: '#/components/schemas/nameReferenceType'
        uom:
          $ref: '#/components/schemas/nameReferenceType'
    literalDataType:
      required:
      - literalDataDomains
      type: object
      properties:
        literalDataDomains:
          type: array
          items:
            $ref: '#/components/schemas/literalDataDomain'
    metadata:
      type: object
      properties:
        title:
          type: string
        role:
          type: string
        href:
          type: string
    nameReferenceType:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        reference:
          type: string
          format: uri
    observedProperty:
      properties:
        name:
          type: string
        uri:
          type: string
          format: uri
        description:
          type: string
    output:
      type: object
      additionalProperties:
        type: object
        properties:
          format:
            $ref: '#/components/schemas/format'
          transmissionMode:
            $ref: '#/components/schemas/transmissionMode'
    outputDescription:
      allOf:
      - $ref: '#/components/schemas/descriptionType'
      - type: object
        properties:
          output:
            oneOf:
            - $ref: '#/components/schemas/complexDataType'
            - $ref: '#/components/schemas/literalDataType'
            - $ref: '#/components/schemas/boundingBoxDataType'
          observedProperty:
            $ref: '#/components/schemas/observedProperty'
    process:
      allOf:
      - $ref: '#/components/schemas/processSummary'
      - type: object
        properties:
          inputs:
            type: array
            items:
              $ref: '#/components/schemas/inputDescription'
          outputs:
            type: array
            items:
              $ref: '#/components/schemas/outputDescription'
    processList:
      type: array
      items:
        $ref: '#/components/schemas/processSummary'
    processSummary:
      allOf:
      - $ref: '#/components/schemas/descriptionType'
      - required:
        - version
        type: object
        properties:
          version:
            type: string
          jobControlOptions:
            type: array
            items:
              $ref: '#/components/schemas/jobControlOptions'
          outputTransmission:
            type: array
            items:
              $ref: '#/components/schemas/transmissionMode'
          links:
            type: array
            items:
              $ref: '#/components/schemas/link'
    range:
      type: object
      properties:
        minimumValue:
          type: string
        maximumValue:
          type: string
        spacing:
          type: string
        rangeClosure:
          type: string
          enum:
          - closed
          - open
          - open-closed
          - closed-open
    result:
      type: object
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/inlineOrRefData'
        - $ref: '#/components/schemas/boundingBoxData'
        - type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/inlineOrRefData'
            - $ref: '#/components/schemas/boundingBoxData'
    statusInfo:
      required:
      - jobID
      - status
      type: object
      properties:
        jobID:
          type: string
        status:
          type: string
          enum:
          - accepted
          - running
          - successful
          - failed
          - dismissed
        message:
          type: string
        progress:
          maximum: 100
          minimum: 0
          type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    subscriber:
      required:
      - successUrl
      type: object
      properties:
        successUri:
          type: string
          format: uri
        inProgressUri:
          type: string
          format: uri
        failedUri:
          type: string
          format: uri
      description: |-
        Optional URIs for callbacks for this job.

        Support for this parameter is not required and the parameter may be
        removed from the API definition, if conformance class **'callback'**
        is not listed in the conformance declaration under `/conformance`.
    supportedCRS:
      type: object
      properties:
        crs:
          type: string
        default:
          type: boolean
          default: false
    transmissionMode:
      type: string
      enum:
      - value
      - reference
    valuesReference:
      type: string
      format: uri
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/result'
      - $ref: '#/components/schemas/exception'
      - type: object
      - type: string
        description: Single binary data output.
        format: binary
      - type: string
        description: Single data output encoded in base64.
        format: byte
      - type: string
        description: Text-based single data output.
      - type: number
      - type: boolean
