openapi: 3.0.2
info:
  title: Building Blocks specified in OGC API - Environmental Data Retrieval
  description: Example of Candidate Environmental Data Retrieval API OpenAPI docs. This document is not an OGC Standard. This document is distributed for review and comment. This document is subject to change without notice and may not be referred to as an OGC Standard. Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation.
  version: 0.0.9
  contact:
    name: "Open Geospatial Consortium (OGC)"
    email: standards-team@ogc.org
    url: 'https://www.ogc.org/contacts'
  license:
    name: OGC License
    url: http://www.opengeospatial.org/legal/
  x-logo:
    url: 'https://www.ogc.org/pub/www/files/OGC_Logo_2D_Blue_x_0_0.png'
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page of this API
      description: 'The landing page provides links to the API definition, the Conformance statements and the metadata about the feature data in this dataset.'
      operationId: getLandingPage
      responses:
        '200':
          description: links to the API capabilities
          content:
            application/json:
              schema:
                $ref: schemas/landingPage.yaml
            text/html:
              schema:
                type: string
      parameters:
        - $ref: parameters/outputFormat.yaml
  /conformance:
    get:
      tags:
        - Capabilities
      summary: information about standards that this API conforms to
      description: list all requirements classes specified in a standard that the server conforms to
      operationId: getRequirementsClasses
      responses:
        '200':
          description: the URIs of all requirements classes supported by the server
          content:
            application/json:
              schema:
                $ref: schemas/confClasses.yaml
            text/html:
              schema:
                type: string
      parameters:
        - $ref: parameters/outputFormat.yaml
  /groups:
    get:
      tags:
        - Capabilities
      summary: Provide a list of avialable data groups
      operationId: listGroups
      responses:
        '200':
          description: List the available data groups.
          content:
            application/json:
              schema:
                $ref: schemas/groups.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
      parameters:
        - $ref: parameters/outputFormat.yaml
  /groups/{groupId}:
    get:
      tags:
        - Capabilities
      summary: List of links to information available in the group
      operationId: groupInfomation
      responses:
        '200':
          description: List of links to the data members of the group, these can either be other groups or collections.
          content:
            application/json:
              schema:
                $ref: schemas/groups.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: parameters/groupId.yaml
      - $ref: parameters/outputFormat.yaml
  /collections:
    get:
      tags:
        - Capabilities
      summary: List the avialable collections from the service
      operationId: listCollections
      responses:
        '200':
          description: Metdata about the Environmental data collections shared by this API.
          content:
            application/json:
              schema:
                $ref: schemas/collections.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: parameters/bbox.yaml
      - $ref: parameters/datetime.yaml
      - $ref: parameters/outputFormat.yaml
  /collections/{collectionId}:
    get:
      tags:
        - Collection metadata
      summary: List query types supported by the collection
      description: This will provide information about the query types that are supported by the chosen collection Use content negotiation to request HTML or JSON.
      operationId: getQueries
      responses:
        '200':
          description: 'Metadata about the {collectionId} collection shared by this API.'
          content:
            application/json:
              schema:
                $ref: schemas/collection.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: parameters/collectionId.yaml
      - $ref: parameters/outputFormat.yaml
  /collections/{collectionId}/position:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for position queries  of collection {collectionId}'
      description: Query end point for position queries
      operationId: getDataForPoint
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/pointCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json:  #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/radius:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for radius queries  of collection {collectionId}'
      description: Query end point for to return values within a defined radius of a point queries
      operationId: getDataForRadius
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/radiusCoords.yaml
        - $ref: parameters/within.yaml
        - $ref: parameters/withinUnits.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json:  #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/area:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for area queries  of collection {collectionId} defined by a polygon'
      description: Return the data values for the data area defined by the query parameters
      operationId: GetDataForArea
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/areaCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/resolutionX.yaml
        - $ref: parameters/resolutionY.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/cube:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for Cube queries  of collection {collectionId} defined by a cube'
      description: Return the data values for the data Cube defined by the query parameters
      operationId: GetDataForCube
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/cubeCoords.yaml
        - $ref: parameters/minZ.yaml
        - $ref: parameters/maxZ.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/resolutionX.yaml
        - $ref: parameters/resolutionY.yaml
        - $ref: parameters/resolutionZ.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/trajectory:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for trajectory queries  of collection {collectionId} defined by a wkt linestring and a iso8601 time period'
      description: Return the data values for the data Polygon defined by the query parameters
      operationId: GetDataForTrajectory
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/trajectoryCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/corridor:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for Corridor queries  of collection {collectionId} defined by a polygon'
      description: Return the data values for the Corridor defined by the query parameters
      operationId: GetDataForCorridor
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/trajectoryCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/corridorWidth.yaml
        - $ref: parameters/corridorHeight.yaml
        - $ref: parameters/resolutionX.yaml
        - $ref: parameters/resolutionZ.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/items:
    get:
      tags:
        - Collection metadata
      summary: List available items
      description: List the items available in the collection accessible via a unique identifier
      operationId: ListDataItems
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/bbox.yaml
        - $ref: parameters/datetime.yaml
      responses:
        '200':
          description: List of pre-existing items available for retrieval
          content:
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/json: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/items/{itemId}:
    get:
      tags:
        - Collection data queries
      summary: Return item {itemId} from collection {collectionId}
      description: 'Query end point to retrieve data from collection {collectionId} using a unique identifier'
      operationId: GetDataForItem
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/itemId.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/json: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances:
    get:
      tags:
        - Collection metadata
      summary: 'List data instances of {collectionId}'
      description: This will provide list of the avalable instances of the collection Use content negotiation to request HTML or JSON.
      operationId: getCollectionInstances
      responses:
        '200':
          description: 'Metadata about the instance of {collectionId} collection shared by this API.'
          content:
            application/json:
              schema:
                $ref: schemas/instances.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: parameters/collectionId.yaml
      - $ref: parameters/outputFormat.yaml
  /collections/{collectionId}/instances/{instanceId}/position:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for position queries of instance {instanceId} of collection {collectionId}'
      description: Query end point for position queries
      operationId: getInstanceDataForPoint
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/pointCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/radius:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point to return data within defined radius of a point for an instance {instanceId} of collection {collectionId}'
      description: Query end point to return all data within a defined radius of the defined point location queries
      operationId: getInstanceDataForRadius
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/radiusCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/within.yaml
        - $ref: parameters/withinUnits.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/area:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for area queries of instance {instanceId} of collection {collectionId} defined by a polygon'
      description: Return the data values for the data area defined by the query parameters
      operationId: GetInstanceDataForArea
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/areaCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/resolutionX.yaml
        - $ref: parameters/resolutionY.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to
           process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/cube:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for Cube queries of instance {instanceId} of collection {collectionId} defined by a cube'
      description: Return the data values for the data Cube defined by the query parameters
      operationId: GetInstanceDataForCube
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/cubeCoords.yaml
        - $ref: parameters/minZ.yaml
        - $ref: parameters/maxZ.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/resolutionX.yaml
        - $ref: parameters/resolutionY.yaml
        - $ref: parameters/resolutionZ.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/trajectory:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for trajectory queries of instance {instanceId} of collection {collectionId} defined by a wkt linestring and a iso8601 time period'
      description: Return the data values for the data Polygon defined by the query parameters
      operationId: GetInstanceDataForTrajectory
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/trajectoryCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/corridor:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for Corridor queries of instance {instanceId} of collection {collectionId} defined by a polygon'
      description: Return the data values for the Corridor defined by the query parameters
      operationId: GetInstanceDataForCorridor
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/trajectoryCoords.yaml
        - $ref: parameters/z.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/parameterName.yaml
        - $ref: parameters/corridorWidth.yaml
        - $ref: parameters/corridorHeight.yaml
        - $ref: parameters/resolutionX.yaml
        - $ref: parameters/resolutionZ.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/locations:
    get:
      tags:
        - Collection metadata
      summary: List available location identifers for the collection
      description: List the locations available for the collection
      operationId: ListCollectionDataLocations
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/bbox.yaml
        - $ref: parameters/datetime.yaml
      responses:
        '200':
          description: List of predefined locations available from the collection
          content:
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/locations/{locId}:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for queries of collection {collectionId} defined by a location id'
      description: Return data the for the location defined by locid
      operationId: GetCollectionDataForLocation
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/locId.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data returned by querying by location identifier
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/locations:
    get:
      tags:
        - Instance metadata
      summary: List available location identifers for the instance
      description: List the locations available for the instance of the collection
      operationId: ListDataInstanceLocations
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/bbox.yaml
        - $ref: parameters/datetime.yaml
      responses:
        '200':
          description: List of predefined locations available from the instance of the collection
          content:
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/locations/{locId}:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for queries of instance {instanceId} of collection {collectionId} defined by a location id'
      description: Return data the for the location defined by locid
      operationId: GetInstanceDataForLocation
      parameters:
        - $ref: parameters/collectionId.yaml
        - $ref: parameters/instanceId.yaml
        - $ref: parameters/locId.yaml
        - $ref: parameters/datetime.yaml
        - $ref: parameters/crs.yaml
        - $ref: parameters/outputFormat.yaml
      responses:
        '200':
          description: Data returned when querying by identifier
          content:
            #application/prs.coverage+json: #deactivated because it causes ReDoc to crash
            #  schema:
            #    $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
tags:
  - name: Capabilities
    description: Essential characteristics of the information available from the API.
  - name: Collection metadata
    description: Description of the information available from the collections
  - name: Instance metadata
    description: Description of the information available from instances of a collection
  - name: Collection data queries
    description: Data queries available.
  - name: Instance data queries
    description: Data queries available on instances of the collection.
