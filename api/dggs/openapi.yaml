openapi: 3.0.0
info:
  title: 'Building Blocks specified in OGC API - Discrete Global Grid Systems - Part 1: Core'
  description: 'Draft example of OGC API - Discrete Global Grid Systems - Part 1 OpenAPI docs. This document is not an OGC Standard. This document is distributed for review and comment. This document is subject to change without notice and may not be referred to as an OGC Standard. Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation.'
  version: 0.0.1
  contact:
    name: "Open Geospatial Consortium (OGC)"
    email: standards-team@ogc.org
    url: 'https://www.ogc.org/contacts'
  license:
    name: OGC License
    url: http://www.opengeospatial.org/legal/
  x-logo:
    url: 'https://www.ogc.org/pub/www/files/OGC_Logo_2D_Blue_x_0_0.png'
servers:
- description: Example OGC API - DGGS server
  url: https://example.com/ogcapi
paths:
  "/":
    get:
      tags:
      - Landing Page
      operationId: getLandingPage
      summary: Retrieve the OGC API landing page for this service.
      parameters:
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/LandingPage"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/conformance":
    get:
      tags:
      - Conformance
      operationId: getConformance
      summary: Retrieve the set of OGC API conformance classes that are supported
        by this service.
      parameters:
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/Conformance"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/api":
    get:
      tags:
      - API
      operationId: getAPI
      summary: Retrieve this API definition.
      parameters:
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/API"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/api/all-collections":
    get:
      tags:
      - API
      operationId: getAPICollections
      summary: Retrieve the list of collections available from this API implementation
        & deployment.
      parameters:
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/Enumeration"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/api/dggs":
    get:
      tags:
      - API
      operationId: getAPIDGGS
      summary: Retrieve the list of shared Discrete Global Grid Systems available
        from this API implementation & deployment.
      parameters:
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/Enumeration"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/collections":
    get:
      tags:
      - Data Collections
      operationId: getCollectionsList
      summary: Retrieve the list of geospatial data collections available from this
        service.
      parameters:
      - "$ref": "#/components/parameters/datetime"
      - name: bbox
        in: query
        description: |-
          Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):
          * Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Minimum value, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Maximum value, coordinate axis 3 (optional)
          The coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.
          For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
          If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box.
          If a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.
        required: false
        schema:
          type: array
          oneOf:
          - minItems: 4
            maxItems: 4
          - minItems: 6
            maxItems: 6
          items:
            type: number
            format: double
        style: form
        explode: false
      - name: limit
        in: query
        description: |-
          The optional limit parameter limits the number of collections that are presented in the response document.
          Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.
          * Minimum = 1 * Maximum = 10000 * Default = 10
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 10000
          default: 10
        style: form
        explode: false
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/CollectionsList"
  "/collections/{collectionId}":
    get:
      tags:
      - Data Collections
      operationId: getCollection
      summary: Retrieve the description of a collection available from this service.
      parameters:
      - "$ref": "#/components/parameters/collectionId-all"
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/Collection"
  "/dggs":
    get:
      tags:
      - DGGS Definition
      summary: Retrieve the list of available DGGS
      operationId: getDGGSList
      parameters:
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/DGGSList"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/dggs/{dggsId}":
    get:
      tags:
      - DGGS Definition
      summary: "(Optional) Retrieve the definition of the specified Discrete Global
        Grid System"
      operationId: getDGGS
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/DGGS"
        '404':
          description: The requested DGGS id was not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/exception"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/dggs/{dggsId}/zones/{zoneId}":
    get:
      tags:
      - DGGS Definition
      summary: "(Optional) Retrieve information about a DGGS Zone, such as geometry
        and data availability."
      operationId: getDGGSZone
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/zoneId"
      - "$ref": "#/components/parameters/collections"
      - "$ref": "#/components/parameters/datetime"
      responses:
        '200':
          description: 'DGGS zone information returned as a response, potentially
            including id, geometry, links to DGGS (rel: dggs), dataset, (rel: dataset),
            collection (rel: geodata), data (rel: dggs-zone-data) (if available for
            this zone)'
          content:
            application/geo+json:
              schema:
                allOf:
                - format: geojson-feature
                - title: GeoJSON Polygon Feature
                  type: object
                  required:
                  - type
                  - properties
                  - geometry
                  properties:
                    type:
                      type: string
                      enum:
                      - Feature
                    id:
                      oneOf:
                      - type: number
                      - type: string
                    properties:
                      type: object
                      nullable: true
                    geometry:
                      title: GeoJSON Polygon
                      type: object
                      required:
                      - type
                      - coordinates
                      properties:
                        type:
                          type: string
                          enum:
                          - Polygon
                        coordinates:
                          type: array
                          items:
                            type: array
                            minItems: 4
                            items:
                              type: array
                              minItems: 2
                              items:
                                type: number
                        bbox:
                          type: array
                          minItems: 4
                          items:
                            type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/collections/{collectionId}/dggs":
    get:
      tags:
      - DGGS Definition
      summary: Retrieve the list of available DGGS for the specified collection
      operationId: getCollectionDGGSList
      parameters:
      - "$ref": "#/components/parameters/f-metadata"
      - "$ref": "#/components/parameters/collectionId-all"
      responses:
        '200':
          "$ref": "#/components/responses/DGGSList"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/collections/{collectionId}/dggs/{dggsId}":
    get:
      tags:
      - DGGS Definition
      summary: "(Optional) Retrieve the definition of the specified Discrete Global
        Grid System in the context of a specified collection"
      operationId: getCollectionDGGS
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/f-metadata"
      - "$ref": "#/components/parameters/collectionId-all"
      responses:
        '200':
          "$ref": "#/components/responses/DGGS"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/collections/{collectionId}/dggs/{dggsId}/zones/{zoneId}":
    get:
      tags:
      - DGGS Definition
      summary: "(Optional) Retrieve information about a DGGS Zone, such as geometry
        and data availability, in the context of a specific collection."
      operationId: getCollectionDGGSZone
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/zoneId"
      - "$ref": "#/components/parameters/collectionId-all"
      - "$ref": "#/components/parameters/collections"
      - "$ref": "#/components/parameters/datetime"
      responses:
        '200':
          "$ref": "#/paths/~1dggs~1%7BdggsId%7D~1zones~1%7BzoneId%7D/get/responses/200"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/dggs/{dggsId}/data":
    get:
      tags:
      - DGGS Data Retrieval
      summary: Retrieve data from a list of DGGS Zones, potentially as optimized DGGS
        zone data packet.
      operationId: retrieveDGGSData
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - name: zones
        in: query
        style: form
        description: A list of identifiers for specific zones of a Discrete Global
          Grid Systems. These identifiers usually include a component corresponding
          to a hierarchy level / scale / resolution, components identifying a spatial
          region, and a optionally a temporal component.
        required: false
        explode: false
        schema:
          type: array
          items:
            type: string
        example:
        - 6-5-30
        - 7-10-61
        - 7-10-62
        - 7-11-61
      - "$ref": "#/components/parameters/collections"
      - "$ref": "#/components/parameters/f-zoneData"
      - "$ref": "#/components/parameters/properties"
      - "$ref": "#/components/parameters/subset"
      - "$ref": "#/components/parameters/filter"
      - "$ref": "#/components/parameters/filter-lang"
      - "$ref": "#/components/parameters/query"
      - "$ref": "#/components/parameters/query-lang"
      - "$ref": "#/components/parameters/datetime"
      responses:
        '200':
          "$ref": "#/components/responses/ZoneData"
        '204':
          "$ref": "#/components/responses/EmptyData"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/dggs/{dggsId}/zones/{zoneId}/data":
    get:
      tags:
      - DGGS Data Retrieval
      summary: Retrieve data from a DGGS Zone, potentially as optimized DGGS zone
        data packet
      operationId: retrieveDGGSZoneData
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/zoneId"
      - "$ref": "#/components/parameters/collections"
      - "$ref": "#/components/parameters/f-zoneData"
      - "$ref": "#/components/parameters/properties"
      - "$ref": "#/components/parameters/subset"
      - "$ref": "#/components/parameters/filter"
      - "$ref": "#/components/parameters/filter-lang"
      - "$ref": "#/components/parameters/query"
      - "$ref": "#/components/parameters/query-lang"
      - "$ref": "#/components/parameters/datetime"
      responses:
        '200':
          "$ref": "#/components/responses/ZoneData"
        '204':
          "$ref": "#/components/responses/EmptyData"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/collections/{collectionId}/dggs/{dggsId}/data":
    get:
      tags:
      - DGGS Data Retrieval
      summary: Retrieve data from a list of DGGS Zones for a specific collection,
        potentially as optimized DGGS zone data packets.
      operationId: retrieveCollectionDGGSData
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/paths/~1dggs~1%7BdggsId%7D~1data/get/parameters/1"
      - "$ref": "#/components/parameters/collectionId-all"
      - "$ref": "#/components/parameters/collections"
      - "$ref": "#/components/parameters/f-zoneData"
      - "$ref": "#/components/parameters/properties"
      - "$ref": "#/components/parameters/subset"
      - "$ref": "#/components/parameters/filter"
      - "$ref": "#/components/parameters/filter-lang"
      - "$ref": "#/components/parameters/query"
      - "$ref": "#/components/parameters/query-lang"
      - "$ref": "#/components/parameters/datetime"
      responses:
        '200':
          "$ref": "#/components/responses/ZoneData"
        '204':
          "$ref": "#/components/responses/EmptyData"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/collections/{collectionId}/dggs/{dggsId}/zones/{zoneId}/data":
    get:
      tags:
      - DGGS Data Retrieval
      summary: Retrieve data from a DGGS Zone for a specific collection, potentially
        as optimized DGGS zone data packet.
      operationId: retrieveCollectionDGGSZoneData
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/zoneId"
      - "$ref": "#/components/parameters/collectionId-all"
      - "$ref": "#/components/parameters/collections"
      - "$ref": "#/components/parameters/f-zoneData"
      - "$ref": "#/components/parameters/properties"
      - "$ref": "#/components/parameters/subset"
      - "$ref": "#/components/parameters/filter"
      - "$ref": "#/components/parameters/filter-lang"
      - "$ref": "#/components/parameters/query"
      - "$ref": "#/components/parameters/query-lang"
      - "$ref": "#/components/parameters/datetime"
      responses:
        '200':
          "$ref": "#/components/responses/ZoneData"
        '204':
          "$ref": "#/components/responses/EmptyData"
        '404':
          "$ref": "#/components/responses/NotFound"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/dggs/{dggsId}/zones":
    get:
      tags:
      - DGGS Zone Query
      summary: Retrieve the list of zones with data for this dataset, or for a particular
        query
      operationId: queryZones
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/collections"
      - name: zone-level
        in: query
        description: The DGGS hierarchy level at which to return the list of zones.
          The precision of the calculation to return the results depends on this parameter.
          Returned zones will have a level equal or smaller to this specified level.
          If `compact-zones` is set to true, all returned zones will be of this zone
          level. If not specified, this defaults to the most detailed zone that the
          system is able to return for the specific request.
        required: false
        schema:
          type: integer
        style: form
        explode: false
      - "$ref": "#/components/parameters/zones"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/offset"
      - "$ref": "#/components/parameters/datetime"
      - "$ref": "#/components/parameters/filter"
      - "$ref": "#/components/parameters/filter-lang"
      - "$ref": "#/components/parameters/query"
      - "$ref": "#/components/parameters/query-lang"
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/ZonesList"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
  "/collections/{collectionId}/dggs/{dggsId}/zones":
    get:
      tags:
      - DGGS Zone Query
      summary: Retrieve the list of zones with data for a specific collection, or
        for a particular query
      operationId: queryCollectionZones
      parameters:
      - "$ref": "#/components/parameters/dggsId"
      - "$ref": "#/components/parameters/collectionId-all"
      - "$ref": "#/components/parameters/collections"
      - "$ref": "#/paths/~1dggs~1%7BdggsId%7D~1zones/get/parameters/2"
      - "$ref": "#/components/parameters/zones"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/offset"
      - "$ref": "#/components/parameters/datetime"
      - "$ref": "#/components/parameters/filter"
      - "$ref": "#/components/parameters/filter-lang"
      - "$ref": "#/components/parameters/query"
      - "$ref": "#/components/parameters/query-lang"
      - "$ref": "#/components/parameters/f-metadata"
      responses:
        '200':
          "$ref": "#/components/responses/ZonesList"
        '406':
          "$ref": "#/components/responses/NotAcceptable"
        '500':
          "$ref": "#/components/responses/ServerError"
components:
  schemas:
    confClasses:
      type: object
      required:
      - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
    link:
      type: object
      required:
      - href
      - rel
      properties:
        href:
          type: string
          description: Supplies the URI to a remote resource (or resource fragment).
          example: http://data.example.com/buildings/123
        rel:
          type: string
          description: The type or semantics of the relation.
          example: alternate
        type:
          type: string
          description: A hint indicating what the media type of the result of dereferencing
            the link should be.
          example: application/geo+json
        templated:
          type: boolean
          description: This flag set to true if the link is a URL template.
        hreflang:
          type: string
          description: A hint indicating what the language of the result of dereferencing
            the link should be.
          example: en
        title:
          type: string
          description: Used to label the destination of a link such that it can be
            used as a human-readable identifier.
          example: Trierer Strasse 70, 53115 Bonn
        length:
          type: integer
    landingPage:
      type: object
      required:
      - links
      properties:
        title:
          type: string
          title: The title of the API.
          description: While a title is not required, implementors are strongly advised
            to include one.
          example: Buildings in Bonn
        description:
          type: string
          example: Access to data about buildings in the city of Bonn via a Web API
            that conforms to the OGC API Common specification.
        attribution:
          type: string
          title: attribution for the API
          description: The `attribution` should be short and intended for presentation
            to a user, for example, in a corner of a map. Parts of the text can be
            links to other resources if additional information is needed. The string
            can include HTML markup.
        links:
          type: array
          items:
            "$ref": "#/components/schemas/link"
    exception:
      title: Exception Schema
      description: JSON schema for exceptions based on RFC 7807
      type: object
      required:
      - type
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
    collections:
      type: object
      required:
      - links
      - collections
      properties:
        links:
          type: array
          items:
            "$ref": "#/components/schemas/link"
        timeStamp:
          type: string
          format: date-time
        numberMatched:
          type: integer
          minimum: 0
          example: 1
        numberReturned:
          type: integer
          minimum: 0
          example: 1
        collections:
          type: array
          items:
            "$ref": "#/components/schemas/collectionInfo"
    collectionInfo:
      type: object
      required:
      - id
      - links
      properties:
        id:
          type: string
          description: identifier of the collection used, for example, in URIs
          example: dem
        title:
          type: string
          description: human readable title of the collection
          example: Digital Elevation Model
        description:
          type: string
          description: a description of the data in the collection
          example: A Digital Elevation Model.
        links:
          type: array
          example:
          - href: http://data.example.org/collections/dem?f=json
            rel: self
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem?f=html
            rel: alternate
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage
            rel: coverage
            type: image/tiff; application=geotiff
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage/domainset
            rel: domainset
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage/rangetype
            rel: rangetype
            type: application/json
            title: Digital Elevation Model
          - href: http://data.example.org/collections/dem/coverage/metadata
            rel: metadata
            type: application/json
            title: Digital Elevation Model
          items:
            "$ref": "#/components/schemas/link"
        extent:
          "$ref": "#/components/schemas/extent-uad"
        itemType:
          description: indicator about the type of the items in the collection if
            the collection has an accessible /collections/{collectionId}/items endpoint
          type: string
          default: unknown
        crs:
          description: the list of coordinate reference systems supported by the API;
            the first item is the default coordinate reference system
          type: array
          items:
            type: string
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
        dataType:
          allOf:
          - description: Type of data represented in the collection
          - "$ref": "#/components/schemas/dataType"
        geometryDimension:
          description: 'The geometry dimension of the features shown in this layer
            (0: points, 1: curves, 2: surfaces, 3: solids), unspecified: mixed or
            unknown'
          type: integer
          minimum: 0
          maximum: 3
        minScaleDenominator:
          description: Minimum scale denominator for usage of the collection
          type: number
        maxScaleDenominator:
          description: Maximum scale denominator for usage of the collection
          type: number
        minCellSize:
          description: Minimum cell size for usage of the collection
          type: number
        maxCellSize:
          description: Maximum cell size for usage of the collection
          type: number
    extent:
      description: |-
        The extent of the data in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.

        The first item in the array describes the overall extent of
        the data. All subsequent items describe more precise extents,
        e.g., to identify clusters of data.
        Clients only interested in the overall extent will only need to
        access the first item in each array.
      type: object
      properties:
        spatial:
          description: The spatial extent of the data in the collection.
          type: object
          properties:
            bbox:
              description: |-
                One or more bounding boxes that describe the spatial extent of the dataset.
                In the Core only a single bounding box is supported.

                Extensions may support additional areas.
                The first bounding box describes the overall spatial
                extent of the data. All subsequent bounding boxes describe
                more precise bounding boxes, e.g., to identify clusters of data.
                Clients only interested in the overall spatial extent will
                only need to access the first item in each array.
              type: array
              minItems: 1
              items:
                description: |-
                  Each bounding box is provided as four or six numbers, depending on
                  whether the coordinate reference system includes a vertical axis
                  (height or depth):

                  * Lower left corner, coordinate axis 1
                  * Lower left corner, coordinate axis 2
                  * Minimum value, coordinate axis 3 (optional)
                  * Upper right corner, coordinate axis 1
                  * Upper right corner, coordinate axis 2
                  * Maximum value, coordinate axis 3 (optional)

                  If the value consists of four numbers, the coordinate reference system is
                  WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)
                  unless a different coordinate reference system is specified in a parameter `bbox-crs`.

                  If the value consists of six numbers, the coordinate reference system is WGS 84
                  longitude/latitude/ellipsoidal height (http://www.opengis.net/def/crs/OGC/0/CRS84h)
                  unless a different coordinate reference system is specified in a parameter `bbox-crs`.

                  For WGS 84 longitude/latitude the values are in most cases the sequence of
                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.
                  However, in cases where the box spans the antimeridian the first value
                  (west-most box edge) is larger than the third value (east-most box edge).

                  If the vertical axis is included, the third and the sixth number are
                  the bottom and the top of the 3-dimensional bounding box.

                  If a feature has multiple spatial geometry properties, it is the decision of the
                  server whether only a single spatial geometry property is used to determine
                  the extent or all relevant geometries.
                type: array
                oneOf:
                - minItems: 4
                  maxItems: 4
                - minItems: 6
                  maxItems: 6
                items:
                  type: number
                example:
                - -180
                - -90
                - 180
                - 90
            crs:
              description: |-
                Coordinate reference system of the coordinates in the spatial extent
                (property `bbox`). The default reference system is WGS 84 longitude/latitude.
                In the Core the only other supported coordinate reference system is
                WGS 84 longitude/latitude/ellipsoidal height for coordinates with height.
                Extensions may support additional coordinate reference systems and add
                additional enum values.
              type: string
              enum:
              - http://www.opengis.net/def/crs/OGC/1.3/CRS84
              - http://www.opengis.net/def/crs/OGC/0/CRS84h
              default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        temporal:
          description: The temporal extent of the features in the collection.
          type: object
          properties:
            interval:
              description: |-
                One or more time intervals that describe the temporal extent of the dataset.
                In the Core only a single time interval is supported.

                Extensions may support multiple intervals.
                The first time interval describes the overall
                temporal extent of the data. All subsequent time intervals describe
                more precise time intervals, e.g., to identify clusters of data.
                Clients only interested in the overall extent will only need
                to access the first item in each array.
              type: array
              minItems: 1
              items:
                description: |-
                  Begin and end times of the time interval. The timestamps are in the
                  temporal coordinate reference system specified in `trs`. By default
                  this is the Gregorian calendar.

                  The value `null` for start or end time is supported and indicates a half-bounded time interval.
                type: array
                minItems: 2
                maxItems: 2
                items:
                  type: string
                  format: date-time
                  nullable: true
                example:
                - '2011-11-11T12:22:11Z'
                -
            trs:
              description: |-
                Coordinate reference system of the coordinates in the temporal extent
                (property `interval`). The default reference system is the Gregorian calendar.
                In the Core this is the only supported temporal coordinate reference system.
                Extensions may support additional temporal coordinate reference systems and add
                additional enum values.
              type: string
              enum:
              - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
              default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
    extent-uad:
      title: Extent with Uniform Additional Dimensions Schema
      description: |-
        The extent module only addresses spatial and temporal extents. This module extends extent by specifying how
        intervals and crs properties can be used to specify additional geometries.
      allOf:
      - "$ref": "#/components/schemas/extent"
      - type: object
        additionalProperties:
          description: The domain intervals for any additional dimensions of the extent
            (envelope) beyond those described in temporal and spatial.
          type: object
          oneOf:
          - required:
            - interval
            - crs
          - required:
            - interval
            - trs
          - required:
            - interval
            - vrs
          properties:
            interval:
              description: |-
                One or more intervals that describe the extent for this dimension of the dataset.
                The value `null` is supported and indicates an unbounded or half-bounded interval.
                The first interval describes the overall extent of the data for this dimension.
                All subsequent intervals describe more precise intervals, e.g., to identify clusters of data.
                Clients only interested in the overall extent will only need
                to access the first item (a pair of lower and upper bound values).
              type: array
              minItems: 1
              items:
                description: |-
                  Lower and upper bound values of the interval. The values
                  are in the coordinate reference system specified in `crs`, `trs` or `vrs`.
                type: array
                minItems: 2
                maxItems: 2
                items:
                  oneOf:
                  - type: string
                    nullable: true
                  - type: number
                example:
                - '2011-11-11T12:22:11Z'
                - 32.5
                -
            crs:
              type: string
              description: generic coordinate reference system suitable for any type
                of dimensions
            trs:
              type: string
              description: temporal coordinate reference system (e.g. as defined by
                Features for 'temporal')
            vrs:
              type: string
              description: vertical coordinate reference system (e.g. as defined in
                EDR for 'vertical')
    crs:
      title: CRS
      oneOf:
      - description: Simplification of the object into a url if the other properties
          are not present
        type: string
      - type: object
        oneOf:
        - required:
          - uri
          properties:
            uri:
              description: Reference to one coordinate reference system (CRS)
              type: string
              format: uri
        - required:
          - wkt
          properties:
            wkt:
              description: A string defining the CRS using the JSON encodng for Well
                Known Text
              type: object
        - required:
          - referenceSystem
          properties:
            referenceSystem:
              description: A reference system data structure as defined in the MD_ReferenceSystem
                of the ISO 19115
              type: object
    dataType:
      oneOf:
      - type: string
      - type: string
        enum:
        - map
        - vector
        - coverage
    timeStamp:
      description: This property indicates the time and date when the response was
        generated
      type: string
      format: date-time
    numberReturned:
      description: |-
        The number of features in the feature collection.
        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.
        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      type: integer
      minimum: 0
      example: 10
    numberMatched:
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      type: integer
      minimum: 0
      example: 127
    dggs:
      title: Discrete Global Grid System definition
      description: A definition of a Discrete Global Grid System following the Discrete
        Global Grid System standard.
      type: object
      properties:
        title:
          description: Title of this Discrete Global Grid System, normally used for
            display to a human
          type: string
        description:
          description: Brief narrative description of this Discrete Global Grid System,
            normally available for display to a human
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s)
            or phrase(s) used to describe this Discrete Global Grid System
          type: array
          items:
            type: string
        id:
          description: Discrete Global Grid System identifier. Implementation of 'identifier'
          type: string
        uri:
          description: Reference to an official source for this Discrete Global Grid
            System
          type: string
          format: uri
        crs:
          allOf:
          - description: Coordinate Reference System (CRS)
          - "$ref": "#/components/schemas/crs"
    dggs-item:
      title: Discrete Global Grid System definition (item)
      description: A minimal Discrete Global Grid System element for use within a
        list of DGGS linking to a full definition.
      type: object
      required:
      - links
      properties:
        id:
          description: Optional local DGGS identifier, e.g. for use as unspecified
            `{dggsId}` parameter. Implementation of 'identifier'
          type: string
        title:
          description: Title of this Discrete Global Grid System, normally used for
            display to a human
          type: string
        uri:
          description: Reference to an official source for this Dicrete Global Grid
            System
          type: string
          format: uri
        crs:
          allOf:
          - description: Coordinate Reference System (CRS)
          - "$ref": "#/components/schemas/crs"
        links:
          description: Links to related resources. A 'self' link to the Discrete Global
            Grid System definition is required. A templated 'dggs-zone-data' link
            to retrieve data and/or a 'dggs-zone-query` link to query DGGS zones should
            also be included.
          type: array
          items:
            "$ref": "#/components/schemas/link"
    FeatureCollection:
      title: GeoJSON FeatureCollection
      type: object
      required:
      - type
      - features
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            title: GeoJSON Feature
            type: object
            required:
            - type
            - properties
            - geometry
            properties:
              type:
                type: string
                enum:
                - Feature
              id:
                oneOf:
                - type: number
                - type: string
              properties:
                type: object
                nullable: true
              geometry:
                oneOf:
                - title: GeoJSON Point
                  type: object
                  nullable: true
                  required:
                  - type
                  - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                      - Point
                    coordinates:
                      type: array
                      minItems: 2
                      items:
                        type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
                - title: GeoJSON LineString
                  type: object
                  required:
                  - type
                  - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                      - LineString
                    coordinates:
                      type: array
                      minItems: 2
                      items:
                        type: array
                        minItems: 2
                        items:
                          type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
                - title: GeoJSON Polygon
                  type: object
                  required:
                  - type
                  - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                      - Polygon
                    coordinates:
                      type: array
                      items:
                        type: array
                        minItems: 4
                        items:
                          type: array
                          minItems: 2
                          items:
                            type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
                - title: GeoJSON MultiPoint
                  type: object
                  required:
                  - type
                  - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                      - MultiPoint
                    coordinates:
                      type: array
                      items:
                        type: array
                        minItems: 2
                        items:
                          type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
                - title: GeoJSON MultiLineString
                  type: object
                  required:
                  - type
                  - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                      - MultiLineString
                    coordinates:
                      type: array
                      items:
                        type: array
                        minItems: 2
                        items:
                          type: array
                          minItems: 2
                          items:
                            type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
                - title: GeoJSON MultiPolygon
                  type: object
                  required:
                  - type
                  - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                      - MultiPolygon
                    coordinates:
                      type: array
                      items:
                        type: array
                        items:
                          type: array
                          minItems: 4
                          items:
                            type: array
                            minItems: 2
                            items:
                              type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
              bbox:
                type: array
                minItems: 4
                items:
                  type: number
        bbox:
          type: array
          minItems: 4
          items:
            type: number
    enumeration:
      type: object
      required:
      - type
      - enum
      properties:
        type:
          type: string
          enum:
          - enum
        enum:
          type: array
          items:
            type: string
    all-collections:
      type: string
      enum:
      - blueMarble
      - NaturalEarth:raster:HYP_HR_SR_OB_DR
      - NaturalEarth:cultural:ne_10m_admin_0_countries
      - NaturalEarth:physical:bathymetry
      - SRTM_ViewFinderPanorama
      - HRDEM-Ottawa
      - HRDEM-RedRiver
    all-dggs:
      type: string
      enum:
      - OpenEAGGR
      - rHEALPix
      - H3
      - GNOSISGlobalGrid
      - GeoSOT
  parameters:
    f-metadata:
      name: f
      in: query
      description: The format of the response. If no value is provided, the accept
        header is used to determine the format. Accepted values are 'json' or 'html'.
      required: false
      schema:
        type: string
        enum:
        - json
        - html
      style: form
      explode: false
    offset:
      name: offset
      description: The optional offset parameter indicates the offset within the result
        set from which the server shall begin presenting results in the response document.
        The first element has an offset of 0 (default).
      explode: false
      in: query
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    collectionId-all:
      name: collectionId
      in: path
      description: Local identifier of a collection
      required: true
      schema:
        "$ref": "#/components/schemas/all-collections"
    collections:
      name: collections
      in: query
      style: form
      description: The collections that should be included in the response. The parameter
        value is a comma-separated list of collection identifiers. If the parameters
        is missing, some or all collections will be included. The collection will
        be rendered in the order specified, with the last one showing on top, unless
        the priority is overridden by styling rules.
      required: false
      explode: false
      schema:
        type: array
        items:
          "$ref": "#/components/schemas/all-collections"
    datetime:
      name: datetime
      in: query
      description: |-
        Either a date-time or an interval, half-bounded or bounded. Date and time expressions
        adhere to RFC 3339. Half-bounded intervals are expressed using double-dots.

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A bounded interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Half-bounded intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      required: false
      schema:
        type: string
      style: form
      explode: false
    subset:
      name: subset
      in: query
      description: |
        Retrieve only part of the data by slicing or trimming along one or more axis
        For trimming: {axisAbbrev}({low}:{high}) (preserves dimensionality)
           An asterisk (`*`) can be used instead of {low} or {high} to indicate the minimum/maximum value.
        For slicing:  {axisAbbrev}({value})      (reduces dimensionality)
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
    properties:
      name: properties
      in: query
      description: |-
        Select specific data record fields (measured/observed properties) to be returned.

        ```
        PropertiesSpec:     "properties"=field[,fieldName]*
        field:              {fieldName}|{fieldIndex}
        fieldName:          {text}
        fieldIndex:         {number}

        Where:
           {number} is an integer number, and
           {text} is some general ASCII text.
        ```

        The field name must be one of the id defined in the RangeType DataRecord fields or feature properties schema.
      required: false
      schema:
        type: string
    filter:
      name: filter
      in: query
      description: The filter parameter specifies an expression in a query language
        (e.g. CQL2) for which an entire feature will be returned if the filter predicate
        is matched. The language of the filter is specified by the `filter-lang` query
        parameter.
      required: false
      schema:
        type: string
      style: form
      explode: false
    filter-lang:
      name: filter-lang
      in: query
      description: The `filter-lang` parameter specifies the query language for the
        `filter` query parameter.
      required: false
      schema:
        type: string
      style: form
      explode: false
    query:
      name: query
      in: query
      description: The query parameter specifies an expression in a query language
        (e.g. a generalized query language based on CQL2) which may return e.g. a
        geometry, coverage, summation, or aggregation. The language of the query is
        specified by the `query-lang` query parameter.
      required: false
      schema:
        type: string
      style: form
      explode: false
    query-lang:
      name: query-lang
      in: query
      description: The `query-lang` parameter specifies the query language for the
        `query` query parameter.
      required: false
      schema:
        type: string
      style: form
      explode: false
    zoneId:
      name: zoneId
      in: path
      description: Identifier for a specific zone of a Discrete Global Grid Systems.
        This identifier usually includes a component corresponding to a hierarchy
        level / scale / resolution, components identifying a spatial region, and a
        optionally a temporal component.
      required: true
      schema:
        type: string
      example: 7-10-59
    zones:
      name: compact-zones
      in: query
      description: If set to true (default), when the list of DGGS zones to be returned
        at the requested resolution (zone-level) includes all children of a parent
        zone, the parent zone will be returned as a shorthand for that list of children
        zone. If set to false, all zones returned will be of the requested zone level.
      required: false
      schema:
        type: boolean
        default: true
      style: form
      explode: false
    zone-level:
      "$ref": "#/components/parameters/zones"
    compact-zones:
      "$ref": "#/components/parameters/zones"
    limit:
      name: limit
      in: query
      description: |-
        The optional limit parameter limits the number of zones that are presented in the response document.
        * Minimum = 1 * Maximum = 10000 * Default = 1000
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 1000
      style: form
      explode: false
    dggsId:
      name: dggsId
      in: path
      description: Identifier for a supported Discrete Global Grid System
      required: true
      allowEmptyValue: false
      schema:
        "$ref": "#/components/schemas/all-dggs"
    f-zoneData:
      name: f
      in: query
      description: The format of the zone data response (e.g. GeoJSON, GeoTIFF).
      required: false
      schema:
        type: string
        enum:
        - geotiff
        - geojson
      style: form
      explode: false
  responses:
    NotFound:
      description: The requested resource does not exist on the server. For example,
        a path parameter had an incorrect value.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/exception"
        text/html:
          schema:
            type: string
    NotAcceptable:
      description: Content negotiation failed. For example, the `Accept` header submitted
        in the request did not support any of the media types supported by the server
        for the requested resource.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/exception"
        text/html:
          schema:
            type: string
    ServerError:
      description: A server error occurred.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/exception"
        text/html:
          schema:
            type: string
    InvalidParameter:
      description: A query parameter has an invalid value.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/exception"
        text/html:
          schema:
            type: string
    Exception:
      description: An error occured.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/exception"
        text/html:
          schema:
            type: string
    LandingPage:
      description: |-
        The landing page provides links to the API definition (link relation `service-desc`, in this case path `/api`),
        to the Conformance declaration (path `/conformance`, link relation `conformance`), and to the Collections of geospatial data (path `/collections`, link relation `data`).
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/landingPage"
          example:
            title: Buildings in Bonn
            description: Access to data about buildings in the city of Bonn via a
              Web API that conforms to the OGC API - DGGS specification.
            links:
            - href: http://data.example.org/
              rel: self
              type: application/json
              title: this document
            - href: http://data.example.org/api
              rel: service-desc
              type: application/vnd.oai.openapi+json;version=3.0
              title: the API definition
            - href: http://data.example.org/api.html
              rel: service-doc
              type: text/html
              title: the API documentation
            - href: http://data.example.org/conformance
              rel: http://www.opengis.net/def/rel/ogc/1.0/conformance
              type: application/json
              title: OGC API conformance classes implemented by this service
            - href: http://data.example.org/collections
              rel: http://www.opengis.net/def/rel/ogc/1.0/data
              type: application/json
              title: Information about the collections
            - href: http://data.example.org/dggs
              rel: http://www.opengis.net/def/rel/ogc/1.0/dggs-list
              type: application/json
              title: List of DGGS implemented by this service
        text/html:
          schema:
            type: string
    Conformance:
      description: The URIs of all conformance classes supported by the server
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/confClasses"
            example:
              conformsTo:
              - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
              - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
              - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
              - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
              - http://www.opengis.net/spec/ogcapi-common-2/1.0/conf/collections
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tilesets-list
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/geodata-tilesets
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/dataset-tilesets
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/geodata-selection
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/jpeg
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/png
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/mvt
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/geojson
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tiff
              - http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/netcdf
    API:
      description: The OpenAPI definition of the API.
      content:
        application/vnd.oai.openapi+json;version=3.0:
          schema:
            type: object
        text/html:
          schema:
            type: string
    Enumeration:
      description: An enumerated list of valid string values for API parameters.
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/enumeration"
        text/html:
          schema:
            type: string
    CollectionsList:
      description: |-
        The collections of (mostly geospatial) data available from this API. The dataset contains one or more collections. This resource provides information about and access to the collections. The response contains the list of collections. Each collection is accessible via one or more OGC API set of specifications, for which a link to relevant accessible resources, e.g. /collections/{collectionId}/(items, coverage, map, tiles...) is provided, with the corresponding relation type, as well as key information about the collection. This information includes:
        * a local identifier for the collection that is unique for the dataset;
        * a list of coordinate reference systems (CRS) in which data may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * an optional title and description for the collection;
        * an optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * for collections accessible via the Features or Records API, an optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/collections"
          example:
            links:
            - href: http://data.example.org/collections.json
              rel: self
              type: application/json
              title: this document
            - href: http://data.example.org/collections.html
              rel: alternate
              type: text/html
              title: this document as HTML
            - href: http://schemas.example.org/1.0/buildings.xsd
              rel: describedby
              type: application/xml
              title: GML application schema for Acme Corporation building data
            - href: http://download.example.org/buildings.gpkg
              rel: enclosure
              type: application/geopackage+sqlite3
              title: Bulk download (GeoPackage)
              length: 472546
            collections:
            - id: buildings
              title: Buildings
              description: Buildings in the city of Bonn.
              extent:
                spatial:
                  bbox:
                  - - 7.01
                    - 50.63
                    - 7.22
                    - 50.78
                temporal:
                  interval:
                  - - '2010-02-15T12:34:56Z'
                    -
              links:
              - href: http://data.example.org/collections/buildings/items
                rel: items
                type: application/geo+json
                title: Buildings
              - href: http://data.example.org/collections/buildings/items.html
                rel: items
                type: text/html
                title: Buildings
              - href: https://creativecommons.org/publicdomain/zero/1.0/
                rel: license
                type: text/html
                title: CC0-1.0
              - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                rel: license
                type: application/rdf+xml
                title: CC0-1.0
        text/html:
          schema:
            type: string
    Collection:
      description: |-
        Information about a particular collection of (mostly geospatial) data available from this API. The collection is accessible via one or more OGC API set of specifications, for which a link to relevant accessible resources, e.g. /collections/{collectionId}/(items, coverage, map, tiles...) is contained in the response, with the corresponding relation type, as well as key information about the collection. This information includes:
        * a local identifier for the collection that is unique for the dataset;
        * a list of coordinate reference systems (CRS) in which data may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * an optional title and description for the collection;
        * an optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * for collections accessible via the Features or Records API, an optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/collectionInfo"
          example:
            id: buildings
            title: Buildings
            description: Buildings in the city of Bonn.
            extent:
              spatial:
                bbox:
                - - 7.01
                  - 50.63
                  - 7.22
                  - 50.78
              temporal:
                interval:
                - - '2010-02-15T12:34:56Z'
                  -
            links:
            - href: http://data.example.org/collections/buildings/items
              rel: items
              type: application/geo+json
              title: Buildings
            - href: http://data.example.org/collections/buildings/items.html
              rel: items
              type: text/html
              title: Buildings
            - href: https://creativecommons.org/publicdomain/zero/1.0/
              rel: license
              type: text/html
              title: CC0-1.0
            - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
              rel: license
              type: application/rdf+xml
              title: CC0-1.0
        text/html:
          schema:
            type: string
    DGGSList:
      description: List of available Discrete Global Grid Systems.
      content:
        application/json:
          schema:
            type: object
            required:
            - dggs
            properties:
              links:
                type: array
                items:
                  "$ref": "#/components/schemas/link"
              dggs:
                type: array
                items:
                  "$ref": "#/components/schemas/dggs-item"
        text/html:
          schema:
            type: string
    DGGS:
      description: List of Discrete Global Grid Systems.
      content:
        application/json:
          schema:
            type: object
            properties:
              dggs:
                type: array
                items:
                  "$ref": "#/components/schemas/dggs-item"
        text/html:
          schema:
            type: string
    ZoneData:
      description: DGGS zone data returned as a response.
      content:
        image/tiff; application=geotiff:
          schema:
            type: string
            format: binary
        application/geo+json:
          schema:
            allOf:
            - format: geojson-feature-collection
            - "$ref": "#/components/schemas/FeatureCollection"
    EmptyData:
      description: No data available for this zone.
    ZonesList:
      description: |-
        List of DGGS Zones. In addition to a compact JSON response intended for fast DGGS client/server exchange (which should support compression),
        visual representations such as GeoTIFF and/or GeoJSON may also be supported.
      content:
        application/json:
          schema:
            type: object
            required:
            - zones
            properties:
              zones:
                type: array
                items:
                  type: string
              links:
                type: array
                items:
                  "$ref": "#/components/schemas/link"
        application/geo+json:
          schema:
            allOf:
            - format: geojson-feature-collection
            - "$ref": "#/components/schemas/FeatureCollection"
        image/tiff; application=geotiff:
          schema:
            type: string
            format: binary
        text/html:
          schema:
            type: string
