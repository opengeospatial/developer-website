{
    "components": {
        "parameters": {
            "bbox-crs": {
                "description": "Indicates the EPSG for the given bbox coordinates.",
                "explode": false,
                "in": "query",
                "name": "bbox-crs",
                "required": false,
                "schema": {
                    "default": 4326,
                    "type": "integer"
                },
                "style": "form"
            },
            "f": {
                "description": "The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is GeoJSON.",
                "explode": false,
                "in": "query",
                "name": "f",
                "required": false,
                "schema": {
                    "default": "json",
                    "enum": [
                        "json",
                        "html",
                        "jsonld"
                    ],
                    "type": "string"
                },
                "style": "form"
            },
            "lang": {
                "description": "The optional lang parameter instructs the server return a response in a certain language, if supported.  If the language is not among the available values, the Accept-Language header language will be used if it is supported. If the header is missing, the default server language is used. Note that providers may only support a single language (or often no language at all), that can be different from the server language.  Language strings can be written in a complex (e.g. \"fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7\"), simple (e.g. \"de\") or locale-like (e.g. \"de-CH\" or \"fr_BE\") fashion.",
                "in": "query",
                "name": "lang",
                "required": false,
                "schema": {
                    "default": "en-US",
                    "enum": [
                        "en-US"
                    ],
                    "type": "string"
                }
            },
            "offset": {
                "description": "The optional offset parameter indicates the index within the result set from which the server shall begin presenting results in the response document.  The first element has an index of 0 (default).",
                "explode": false,
                "in": "query",
                "name": "offset",
                "required": false,
                "schema": {
                    "default": 0,
                    "minimum": 0,
                    "type": "integer"
                },
                "style": "form"
            },
            "properties": {
                "description": "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
                "explode": false,
                "in": "query",
                "name": "properties",
                "required": false,
                "schema": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "style": "form"
            },
            "skipGeometry": {
                "description": "This option can be used to skip response geometries for each feature.",
                "explode": false,
                "in": "query",
                "name": "skipGeometry",
                "required": false,
                "schema": {
                    "default": false,
                    "type": "boolean"
                },
                "style": "form"
            },
            "vendorSpecificParameters": {
                "description": "Additional \"free-form\" parameters that are not explicitly defined",
                "in": "query",
                "name": "vendorSpecificParameters",
                "schema": {
                    "additionalProperties": true,
                    "type": "object"
                },
                "style": "form"
            }
        },
        "responses": {
            "200": {
                "description": "successful operation"
            },
            "Queryables": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/queryables"
                        }
                    }
                },
                "description": "successful queryables operation"
            },
            "Tiles": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/tiles"
                        }
                    }
                },
                "description": "Retrieves the tiles description for this collection"
            },
            "default": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml"
                        }
                    }
                },
                "description": "Unexpected error"
            }
        }
    } 
    ,
    "openapi": "3.0.2",
    "paths": {
        "/collections/lakes/items": {
            "get": {
                "description": "lakes of the world, public domain",
                "operationId": "getLakesFeatures",
                "parameters": [
                    {
                        "description": "The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is GeoJSON.",
                        "explode": false,
                        "in": "query",
                        "name": "f",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "html",
                                "jsonld",
                                "csv"
                            ],
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "description": "The optional lang parameter instructs the server return a response in a certain language, if supported.  If the language is not among the available values, the Accept-Language header language will be used if it is supported. If the header is missing, the default server language is used. Note that providers may only support a single language (or often no language at all), that can be different from the server language.  Language strings can be written in a complex (e.g. \"fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7\"), simple (e.g. \"de\") or locale-like (e.g. \"de-CH\" or \"fr_BE\") fashion.",
                        "in": "query",
                        "name": "lang",
                        "required": false,
                        "schema": {
                            "default": "en-US",
                            "enum": [
                                "en-US"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox"
                    },
                    {
                        "$ref": "https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit"
                    },
                    {
                        "description": "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
                        "explode": false,
                        "in": "query",
                        "name": "properties",
                        "required": false,
                        "schema": {
                            "items": {
                                "enum": [
                                    "id",
                                    "scalerank",
                                    "name",
                                    "name_alt",
                                    "admin",
                                    "featureclass"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "style": "form"
                    },
                    {
                        "$ref": "#/components/parameters/vendorSpecificParameters"
                    },
                    {
                        "$ref": "#/components/parameters/skipGeometry"
                    },
                    {
                        "$ref": "https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml"
                    },
                    {
                        "$ref": "#/components/parameters/offset"
                    },
                    {
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "explode": false,
                        "in": "query",
                        "name": "scalerank",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "explode": false,
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "explode": false,
                        "in": "query",
                        "name": "name_alt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "explode": false,
                        "in": "query",
                        "name": "admin",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "explode": false,
                        "in": "query",
                        "name": "featureclass",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features"
                    },
                    "400": {
                        "$ref": "https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
                    },
                    "404": {
                        "$ref": "https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "https://demo.pygeoapi.io/master/schemas/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
                    }
                },
                "summary": "Get Large Lakes items",
                "tags": [
                    "lakes"
                ]
            }
        }   },
    "servers": [
        {
            // "description": "pygeoapi provides an API to geospatial data",
            "url": "https://demo.pygeoapi.io/master"
        }
    ]
}